// Generated by tools/packets_db/main.rs
// Auto generated file do not edit manually

#![allow(dead_code)]

use std::any::Any;

pub trait Packet {
    fn id(&self, packetver: u32) -> &str;
    fn name(&self) -> &str;
    fn base_len(&self, packetver: u32) -> usize;
    fn display(&self);
    fn debug(&self);
    fn pretty_debug(&self);
    fn fill_raw(&mut self);
    fn fill_raw_with_packetver(&mut self, packetver: Option<u32>);
    fn raw(&self) -> &Vec<u8>;
    fn raw_mut(&mut self) -> &mut Vec<u8>;
    fn as_any(&self) -> &dyn Any;
    fn as_any_mut(&mut self) -> &mut dyn Any;
    fn to_json(&self, packetver: u32) -> String;
}

#[derive(Clone)]
pub struct PacketCaLogin {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd: [char; 24],
    pub passwd_raw: [u8; 24],
    pub client_type: u8,
    pub client_type_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketChEnter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub user_level: u32,
    pub user_level_raw: [u8; 4],
    pub client_type: u16,
    pub client_type_raw: [u8; 2],
    pub sex: u8,
    pub sex_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketChSelectChar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_num: u8,
    pub char_num_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketChMakeChar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub str: u8,
    pub str_raw: [u8; 1],
    pub agi: u8,
    pub agi_raw: [u8; 1],
    pub vit: u8,
    pub vit_raw: [u8; 1],
    pub int: u8,
    pub int_raw: [u8; 1],
    pub dex: u8,
    pub dex_raw: [u8; 1],
    pub luk: u8,
    pub luk_raw: [u8; 1],
    pub char_num: u8,
    pub char_num_raw: [u8; 1],
    pub head_pal: i16,
    pub head_pal_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChMakeChar2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub char_num: u8,
    pub char_num_raw: [u8; 1],
    pub head_pal: i16,
    pub head_pal_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChDeleteChar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub key: [char; 40],
    pub key_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketAcAcceptLogin {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub user_level: u32,
    pub user_level_raw: [u8; 4],
    pub last_login_ip: u32,
    pub last_login_ip_raw: [u8; 4],
    pub last_login_time: [char; 26],
    pub last_login_time_raw: [u8; 26],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub server_list: Vec<ServerAddr>,
    pub server_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketAcAcceptLogin2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub user_level: u32,
    pub user_level_raw: [u8; 4],
    pub last_login_ip: u32,
    pub last_login_ip_raw: [u8; 4],
    pub last_login_time: [char; 26],
    pub last_login_time_raw: [u8; 26],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub twitter_auth_token: [char; 16],
    pub twitter_auth_token_raw: [u8; 16],
    pub twitter_flag: u8,
    pub twitter_flag_raw: [u8; 1],
    pub server_list: Vec<ServerAddr2>,
    pub server_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketAcRefuseLogin {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
    pub block_date: [char; 20],
    pub block_date_raw: [u8; 20],
}

#[derive(Clone)]
pub struct PacketHcAcceptEnterNeoUnion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub total_slot_num: u8,
    pub total_slot_num_raw: [u8; 1],
    pub premium_start_slot: u8,
    pub premium_start_slot_raw: [u8; 1],
    pub premium_end_slot: u8,
    pub premium_end_slot_raw: [u8; 1],
    pub dummy1_beginbilling: i8,
    pub dummy1_beginbilling_raw: [u8; 1],
    pub code: u32,
    pub code_raw: [u8; 4],
    pub time1: u32,
    pub time1_raw: [u8; 4],
    pub time2: u32,
    pub time2_raw: [u8; 4],
    pub dummy2_endbilling: [char; 7],
    pub dummy2_endbilling_raw: [u8; 7],
    pub char_info: Vec<CharacterInfoNeoUnion>,
    pub char_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketHcRefuseEnter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketHcAcceptMakecharNeoUnion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub charinfo: CharacterInfoNeoUnion,
    pub charinfo_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketHcRefuseMakechar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketHcAcceptDeletechar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketHcRefuseDeletechar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketHcNotifyZonesvr {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub addr: ZserverAddr,
    pub addr_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzEnter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub client_time: u32,
    pub client_time_raw: [u8; 4],
    pub sex: u8,
    pub sex_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAcceptEnter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcRefuseEnter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyInitchar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub style: i16,
    pub style_raw: [u8; 2],
    pub item: u8,
    pub item_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyUpdatechar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub style: i16,
    pub style_raw: [u8; 2],
    pub item: u8,
    pub item_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyUpdateplayer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub style: i16,
    pub style_raw: [u8; 2],
    pub item: u8,
    pub item_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i16,
    pub weapon_raw: [u8; 2],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub shield: i16,
    pub shield_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyNewentry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i16,
    pub weapon_raw: [u8; 2],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub shield: i16,
    pub shield_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyActentry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i16,
    pub weapon_raw: [u8; 2],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub shield: i16,
    pub shield_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub action: u8,
    pub action_raw: [u8; 1],
    pub act_start_time: u32,
    pub act_start_time_raw: [u8; 4],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMoveentry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i16,
    pub weapon_raw: [u8; 2],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub shield: i16,
    pub shield_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub move_data: [u16; 6],
    pub move_data_raw: [u8; 12],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentryNpc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i16,
    pub weapon_raw: [u8; 2],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub shield: i16,
    pub shield_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzNotifyActorinit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzRequestTime {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub client_time: u32,
    pub client_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyTime {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub time: u32,
    pub time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyVanish {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketScNotifyBan {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzRequestQuit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAcceptQuit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcRefuseQuit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzRequestMove {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub dest: [u8; 3],
    pub dest_raw: [u8; 3],
}

#[derive(Clone)]
pub struct PacketZcNotifyMove {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub move_data: [u8; 6],
    pub move_data_raw: [u8; 6],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyPlayermove {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub move_data: [u8; 6],
    pub move_data_raw: [u8; 6],
}

#[derive(Clone)]
pub struct PacketZcStopmove {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzRequestAct {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub target_gid: u32,
    pub target_gid_raw: [u8; 4],
    pub action: u8,
    pub action_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyAct {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub target_gid: u32,
    pub target_gid_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub attack_mt: i32,
    pub attack_mt_raw: [u8; 4],
    pub attacked_mt: i32,
    pub attacked_mt_raw: [u8; 4],
    pub damage: i16,
    pub damage_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
    pub left_damage: i16,
    pub left_damage_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyActPosition {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub target_gid: u32,
    pub target_gid_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub damage: i16,
    pub damage_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzRequestChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNotifyChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNotifyPlayerchat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketServerEntryAck {
    pub raw: Vec<u8>,
    pub header: i16,
    pub header_raw: [u8; 2],
    pub aid: i32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzContactnpc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNpcackMapmove {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNpcackServermove {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub addr: ZserverAddr,
    pub addr_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNpcackEnable {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub cname: [char; 24],
    pub cname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzWhisper {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub receiver: [char; 24],
    pub receiver_raw: [u8; 24],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcWhisper {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub sender: [char; 24],
    pub sender_raw: [u8; 24],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcAckWhisper {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzBroadcast {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcBroadcast {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzChangeDirection {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub dir: u8,
    pub dir_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcChangeDirection {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub dir: u8,
    pub dir_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcItemEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itaid: u32,
    pub itaid_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub sub_x: u8,
    pub sub_x_raw: [u8; 1],
    pub sub_y: u8,
    pub sub_y_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcItemFallEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itaid: u32,
    pub itaid_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub sub_x: u8,
    pub sub_x_raw: [u8; 1],
    pub sub_y: u8,
    pub sub_y_raw: [u8; 1],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzItemPickup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itaid: u32,
    pub itaid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcItemPickupAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: u16,
    pub count_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcItemDisappear {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itaid: u32,
    pub itaid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzItemThrow {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNormalItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcEquipmentItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStoreNormalItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStoreEquipmentItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzUseItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcUseItemAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub result: bool,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqWearEquip {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub wear_location: u16,
    pub wear_location_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcReqWearEquipAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub wear_location: u16,
    pub wear_location_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcReqWearEquipAck2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub wear_location: u16,
    pub wear_location_raw: [u8; 2],
    pub view_id: u16,
    pub view_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqTakeoffEquip {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcReqTakeoffEquipAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub wear_location: u16,
    pub wear_location_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcReqTakeoffEquipAck2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub wear_location: u16,
    pub wear_location_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcItemThrowAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcParChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub var_id: u16,
    pub var_id_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcLongparChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub var_id: u16,
    pub var_id_raw: [u8; 2],
    pub amount: i32,
    pub amount_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzRestart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcRestartAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSayDialog {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcWaitDialog {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCloseDialog {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMenuList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzChooseMenu {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub num: u8,
    pub num_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqNextScript {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqStatus {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzStatusChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub status_id: u16,
    pub status_id_raw: [u8; 2],
    pub change_amount: u8,
    pub change_amount_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcStatusChangeAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub status_id: u16,
    pub status_id_raw: [u8; 2],
    pub result: bool,
    pub result_raw: [u8; 1],
    pub value: u8,
    pub value_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcStatus {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub point: i16,
    pub point_raw: [u8; 2],
    pub str: u8,
    pub str_raw: [u8; 1],
    pub standard_str: u8,
    pub standard_str_raw: [u8; 1],
    pub agi: u8,
    pub agi_raw: [u8; 1],
    pub standard_agi: u8,
    pub standard_agi_raw: [u8; 1],
    pub vit: u8,
    pub vit_raw: [u8; 1],
    pub standard_vit: u8,
    pub standard_vit_raw: [u8; 1],
    pub int: u8,
    pub int_raw: [u8; 1],
    pub standard_int: u8,
    pub standard_int_raw: [u8; 1],
    pub dex: u8,
    pub dex_raw: [u8; 1],
    pub standard_dex: u8,
    pub standard_dex_raw: [u8; 1],
    pub luk: u8,
    pub luk_raw: [u8; 1],
    pub standard_luk: u8,
    pub standard_luk_raw: [u8; 1],
    pub att_power: i16,
    pub att_power_raw: [u8; 2],
    pub refining_power: i16,
    pub refining_power_raw: [u8; 2],
    pub max_matt_power: i16,
    pub max_matt_power_raw: [u8; 2],
    pub min_matt_power: i16,
    pub min_matt_power_raw: [u8; 2],
    pub itemdef_power: i16,
    pub itemdef_power_raw: [u8; 2],
    pub plusdef_power: i16,
    pub plusdef_power_raw: [u8; 2],
    pub mdef_power: i16,
    pub mdef_power_raw: [u8; 2],
    pub plusmdef_power: i16,
    pub plusmdef_power_raw: [u8; 2],
    pub hit_success_value: i16,
    pub hit_success_value_raw: [u8; 2],
    pub avoid_success_value: i16,
    pub avoid_success_value_raw: [u8; 2],
    pub plus_avoid_success_value: i16,
    pub plus_avoid_success_value_raw: [u8; 2],
    pub critical_success_value: i16,
    pub critical_success_value_raw: [u8; 2],
    pub aspd: i16,
    pub aspd_raw: [u8; 2],
    pub plus_aspd: i16,
    pub plus_aspd_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcStatusChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub status_id: u16,
    pub status_id_raw: [u8; 2],
    pub value: u8,
    pub value_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqEmotion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcEmotion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqUserCount {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcUserCount {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSpriteChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub value: u8,
    pub value_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSelectDealtype {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzAckSelectDealtype {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcPcPurchaseItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_list: Vec<PurchaseItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcPcSellItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_list: Vec<SellItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPcPurchaseItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_list: Vec<CzPurchaseItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPcSellItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_list: Vec<CzSellItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcPcPurchaseResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcPcSellResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzDisconnectCharacter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckDisconnectCharacter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzDisconnectAllCharacter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzSettingWhisperPc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzSettingWhisperState {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSettingWhisperPc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSettingWhisperState {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqWhisperList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcWhisperList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub wisper_list: Vec<WhisperItem>,
    pub wisper_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzCreateChatroom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub size: i16,
    pub size_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub passwd: [char; 8],
    pub passwd_raw: [u8; 8],
    pub title: String,
    pub title_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcAckCreateChatroom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcRoomNewentry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub room_id: u32,
    pub room_id_raw: [u8; 4],
    pub maxcount: i16,
    pub maxcount_raw: [u8; 2],
    pub curcount: i16,
    pub curcount_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub title: String,
    pub title_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcDestroyRoom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub room_id: u32,
    pub room_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqEnterRoom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub room_id: u32,
    pub room_id_raw: [u8; 4],
    pub passwd: [char; 8],
    pub passwd_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketZcRefuseEnterRoom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcEnterRoom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub room_id: u32,
    pub room_id_raw: [u8; 4],
    pub member_list: Vec<RoomMember>,
    pub member_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcMemberNewentry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub curcount: i16,
    pub curcount_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcMemberExit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub curcount: i16,
    pub curcount_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzChangeChatroom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub size: i16,
    pub size_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub passwd: [char; 8],
    pub passwd_raw: [u8; 8],
    pub title: String,
    pub title_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcChangeChatroom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub room_id: u32,
    pub room_id_raw: [u8; 4],
    pub maxcount: i16,
    pub maxcount_raw: [u8; 2],
    pub curcount: i16,
    pub curcount_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub title: String,
    pub title_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqRoleChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub role: u32,
    pub role_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcRoleChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub role: u32,
    pub role_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzReqExpelMember {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzExitRoom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcReqExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzAckExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAckExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzAddExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAddExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketZcAckAddExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzConcludeExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcConcludeExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub who: u8,
    pub who_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzCancelExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcCancelExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzExecExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcExecExchangeItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcExchangeitemUndo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyStoreitemCountinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub cur_count: i16,
    pub cur_count_raw: [u8; 2],
    pub max_count: i16,
    pub max_count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzPlayerChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcAddItemToStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketCzMoveItemFromStoreToBody {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcDeleteItemFromStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzCloseStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcCloseStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzMakeGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcAckMakeGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcGroupList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
    pub group_info: Vec<GroupmemberInfo>,
    pub group_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqJoinGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqJoinGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub answer: u8,
    pub answer_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcReqJoinGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub grid: u32,
    pub grid_raw: [u8; 4],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzJoinGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub grid: u32,
    pub grid_raw: [u8; 4],
    pub answer: i32,
    pub answer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqLeaveGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcGroupinfoChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub exp_option: u32,
    pub exp_option_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzChangeGroupexpoption {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub exp_option: u32,
    pub exp_option_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqExpelGroupMember {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcAddMemberToGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub role: u32,
    pub role_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketZcDeleteMemberFromGroup {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyHpToGroupm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub hp: i16,
    pub hp_raw: [u8; 2],
    pub maxhp: i16,
    pub maxhp_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyPositionToGroupm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzRequestChatParty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNotifyChatParty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcMvpGettingItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMvpGettingSpecialExp {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub exp: u32,
    pub exp_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMvp {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcThrowMvpitem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSkillinfoUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub spcost: i16,
    pub spcost_raw: [u8; 2],
    pub attack_range: i16,
    pub attack_range_raw: [u8; 2],
    pub upgradable: bool,
    pub upgradable_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSkillinfoList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub skill_list: Vec<SKILLINFO>,
    pub skill_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcAckTouseskill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub num: u32,
    pub num_raw: [u8; 4],
    pub result: bool,
    pub result_raw: [u8; 1],
    pub cause: u8,
    pub cause_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAddSkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub data: SKILLINFO,
    pub data_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzUpgradeSkilllevel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzUseSkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub selected_level: i16,
    pub selected_level_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifySkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub attack_mt: i32,
    pub attack_mt_raw: [u8; 4],
    pub attacked_mt: i32,
    pub attacked_mt_raw: [u8; 4],
    pub damage: i16,
    pub damage_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifySkillPosition {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub attack_mt: i32,
    pub attack_mt_raw: [u8; 4],
    pub attacked_mt: i32,
    pub attacked_mt_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub damage: i16,
    pub damage_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzUseSkillToground {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub selected_level: i16,
    pub selected_level_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyGroundskill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzCancelLockon {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcStateChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcUseSkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub target_aid: u32,
    pub target_aid_raw: [u8; 4],
    pub src_aid: u32,
    pub src_aid_raw: [u8; 4],
    pub result: bool,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzSelectWarppoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketZcWarplist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub map_name: [char; 4],
    pub map_name_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzRememberWarppoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckRememberWarppoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSkillEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub creator_aid: u32,
    pub creator_aid_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub job: u8,
    pub job_raw: [u8; 1],
    pub is_visible: bool,
    pub is_visible_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSkillDisappear {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyCartitemCountinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub cur_count: i16,
    pub cur_count_raw: [u8; 2],
    pub max_count: i16,
    pub max_count_raw: [u8; 2],
    pub cur_weight: i32,
    pub cur_weight_raw: [u8; 4],
    pub max_weight: i32,
    pub max_weight_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCartEquipmentItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcCartNormalItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcAddItemToCart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketZcDeleteItemFromCart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMoveItemFromBodyToCart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMoveItemFromCartToBody {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMoveItemFromStoreToCart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMoveItemFromCartToStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqCartoff {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcCartoff {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckAdditemToCart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcOpenstore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itemcount: i16,
    pub itemcount_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqClosestore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqOpenstore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub store_name: [char; 80],
    pub store_name_raw: [u8; 80],
    pub store_list: Vec<StoreItem>,
    pub store_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqBuyFrommc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcStoreEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
    pub store_name: [char; 80],
    pub store_name_raw: [u8; 80],
}

#[derive(Clone)]
pub struct PacketZcDisappearEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcPcPurchaseItemlistFrommc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub item_list: Vec<PurchaseItemFrommc>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPcPurchaseItemlistFrommc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub item_list: Vec<CzPurchaseItemFrommc>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcPcPurchaseResultFrommc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub curcount: i16,
    pub curcount_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcPcPurchaseMyitemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub item_list: Vec<PurchaseMyitem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcDeleteitemFromMcstore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzPkmodeChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub is_turn_on: bool,
    pub is_turn_on_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAttackFailureForDistance {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub target_aid: u32,
    pub target_aid_raw: [u8; 4],
    pub target_xpos: i16,
    pub target_xpos_raw: [u8; 2],
    pub target_ypos: i16,
    pub target_ypos_raw: [u8; 2],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub current_att_range: i16,
    pub current_att_range_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAttackRange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub current_att_range: i16,
    pub current_att_range_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcActionFailure {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcEquipArrow {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcRecovery {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub var_id: i16,
    pub var_id_raw: [u8; 2],
    pub amount: i16,
    pub amount_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcUseskillAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub property: u32,
    pub property_raw: [u8; 4],
    pub delay_time: u32,
    pub delay_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzItemCreate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub item_name: [char; 24],
    pub item_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzMovetoMap {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcStatusValues {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub status_type: u32,
    pub status_type_raw: [u8; 4],
    pub default_status: i32,
    pub default_status_raw: [u8; 4],
    pub plus_status: i32,
    pub plus_status_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcOpenEditdlg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzInputEditdlg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCompass {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub x_pos: i32,
    pub x_pos_raw: [u8; 4],
    pub y_pos: i32,
    pub y_pos_raw: [u8; 4],
    pub id: u8,
    pub id_raw: [u8; 1],
    pub color: u32,
    pub color_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcShowImage {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub image_name: [char; 16],
    pub image_name_raw: [u8; 16],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzCloseDialog {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAutorunSkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub data: SKILLINFO,
    pub data_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcResurrection {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqGiveMannerPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub other_aid: u32,
    pub other_aid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub point: i16,
    pub point_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckGiveMannerPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u32,
    pub result_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyMannerPointGiven {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub other_char_name: [char; 24],
    pub other_char_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcMyguildBasicInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub related_guild_list: Vec<RelatedGuild>,
    pub related_guild_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqGuildMenuinterface {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckGuildMenuinterface {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub guild_memu_flag: i32,
    pub guild_memu_flag_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqGuildMenu {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcGuildInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: i32,
    pub gdid_raw: [u8; 4],
    pub level: i32,
    pub level_raw: [u8; 4],
    pub user_num: i32,
    pub user_num_raw: [u8; 4],
    pub max_user_num: i32,
    pub max_user_num_raw: [u8; 4],
    pub user_average_level: i32,
    pub user_average_level_raw: [u8; 4],
    pub exp: i32,
    pub exp_raw: [u8; 4],
    pub max_exp: i32,
    pub max_exp_raw: [u8; 4],
    pub point: i32,
    pub point_raw: [u8; 4],
    pub honor: i32,
    pub honor_raw: [u8; 4],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub emblem_version: i32,
    pub emblem_version_raw: [u8; 4],
    pub guildname: [char; 24],
    pub guildname_raw: [u8; 24],
    pub master_name: [char; 24],
    pub master_name_raw: [u8; 24],
    pub manage_land: [char; 16],
    pub manage_land_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketCzReqGuildEmblemImg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: i32,
    pub gdid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcGuildEmblemImg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub gdid: i32,
    pub gdid_raw: [u8; 4],
    pub emblem_version: i32,
    pub emblem_version_raw: [u8; 4],
    pub img: String,
    pub img_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzRegisterGuildEmblemImg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub img: String,
    pub img_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcMembermgrInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_info: Vec<GuildMembermgrInfo>,
    pub member_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqChangeMemberpos {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_info: Vec<MemberPositionInfo>,
    pub member_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcAckReqChangeMembers {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_info: Vec<MemberPositionInfo>,
    pub member_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqOpenMemberInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: i32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckOpenMemberInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqLeaveGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub aid: i32,
    pub aid_raw: [u8; 4],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub reason_desc: [char; 40],
    pub reason_desc_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcAckLeaveGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
    pub reason_desc: [char; 40],
    pub reason_desc_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketCzReqBanGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub aid: i32,
    pub aid_raw: [u8; 4],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub reason_desc: [char; 40],
    pub reason_desc_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcAckBanGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
    pub reason_desc: [char; 40],
    pub reason_desc_raw: [u8; 40],
    pub account: [char; 24],
    pub account_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzReqDisorganizeGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub key: [char; 40],
    pub key_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcAckDisorganizeGuildResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub reason: i32,
    pub reason_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckDisorganizeGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub reason_desc: [char; 40],
    pub reason_desc_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcPositionInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_info: Vec<GuildMemberPositionInfo>,
    pub member_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzRegChangeGuildPositioninfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_list: Vec<GuildRegPositionInfo>,
    pub member_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcGuildSkillinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub skill_point: i16,
    pub skill_point_raw: [u8; 2],
    pub skill_list: Vec<SKILLINFO>,
    pub skill_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcBanList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub ban_list: Vec<GuildBanInfo>,
    pub ban_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcOtherGuildList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub guild_list: Vec<OtherGuildInfo>,
    pub guild_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqMakeGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub gname: [char; 24],
    pub gname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcPositionIdNameInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_list: Vec<MemberPositionIdNameInfo>,
    pub member_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcResultMakeGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqJoinGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub my_aid: u32,
    pub my_aid_raw: [u8; 4],
    pub my_gid: u32,
    pub my_gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqJoinGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub answer: u8,
    pub answer_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcReqJoinGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub guild_name: [char; 24],
    pub guild_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzJoinGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub answer: i32,
    pub answer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcUpdateGdid {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub emblem_version: i32,
    pub emblem_version_raw: [u8; 4],
    pub right: i32,
    pub right_raw: [u8; 4],
    pub is_master: bool,
    pub is_master_raw: [u8; 1],
    pub inter_sid: i32,
    pub inter_sid_raw: [u8; 4],
    pub gname: [char; 24],
    pub gname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcUpdateCharstat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub status: i32,
    pub status_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzGuildNotice {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub subject: [char; 60],
    pub subject_raw: [u8; 60],
    pub notice: [char; 120],
    pub notice_raw: [u8; 120],
}

#[derive(Clone)]
pub struct PacketZcGuildNotice {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub subject: [char; 60],
    pub subject_raw: [u8; 60],
    pub notice: [char; 120],
    pub notice_raw: [u8; 120],
}

#[derive(Clone)]
pub struct PacketCzReqAllyGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub my_aid: u32,
    pub my_aid_raw: [u8; 4],
    pub my_gid: u32,
    pub my_gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcReqAllyGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub other_aid: u32,
    pub other_aid_raw: [u8; 4],
    pub guild_name: [char; 24],
    pub guild_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzAllyGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub other_aid: u32,
    pub other_aid_raw: [u8; 4],
    pub answer: i32,
    pub answer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqAllyGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub answer: u8,
    pub answer_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAckChangeGuildPositioninfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub member_list: Vec<GuildRegPositionInfo>,
    pub member_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqGuildMemberInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: i32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckGuildMemberInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: GuildMemberInfo,
    pub info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcItemidentifyList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub itidlist: Vec<u16>,
    pub itidlist_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqItemidentify {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckItemidentify {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqItemcompositionList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub card_index: i16,
    pub card_index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcItemcompositionList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub itidlist: Vec<u16>,
    pub itidlist_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqItemcomposition {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub card_index: i16,
    pub card_index_raw: [u8; 2],
    pub equip_index: i16,
    pub equip_index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckItemcomposition {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub equip_index: i16,
    pub equip_index_raw: [u8; 2],
    pub card_index: i16,
    pub card_index_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzGuildChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcGuildChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqHostileGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqHostileGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMemberAdd {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: GuildMemberInfo,
    pub info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqDeleteRelatedGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub opponent_gdid: u32,
    pub opponent_gdid_raw: [u8; 4],
    pub relation: i32,
    pub relation_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcDeleteRelatedGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub opponent_gdid: u32,
    pub opponent_gdid_raw: [u8; 4],
    pub relation: i32,
    pub relation_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAddRelatedGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: RelatedGuildInfo,
    pub info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCollectordead {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub server_id: u32,
    pub server_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketPing {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckItemrefining {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub item_index: i16,
    pub item_index_raw: [u8; 2],
    pub refining_level: i16,
    pub refining_level_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMapinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqDisconnect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckReqDisconnect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMonsterInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub size: i16,
    pub size_raw: [u8; 2],
    pub hp: i32,
    pub hp_raw: [u8; 4],
    pub def: i16,
    pub def_raw: [u8; 2],
    pub race_type: i16,
    pub race_type_raw: [u8; 2],
    pub mdef_power: i16,
    pub mdef_power_raw: [u8; 2],
    pub property: i16,
    pub property_raw: [u8; 2],
    pub property_table: MonsterInfoElement,
    pub property_table_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcMakableitemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub info: MakableitemInfo,
    pub info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqmakingitem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: MakableitemInfo,
    pub info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcAckReqmakingitem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzUseSkillTogroundWithtalkbox {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub selected_level: i16,
    pub selected_level_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub contents: [char; 80],
    pub contents_raw: [u8; 80],
}

#[derive(Clone)]
pub struct PacketZcTalkboxChatcontents {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub contents: [char; 80],
    pub contents_raw: [u8; 80],
}

#[derive(Clone)]
pub struct PacketZcUpdateMapinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketCzReqnameBygid {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqnameBygid {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub cname: [char; 24],
    pub cname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcAckReqnameall {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub cname: [char; 24],
    pub cname_raw: [u8; 24],
    pub pname: [char; 24],
    pub pname_raw: [u8; 24],
    pub gname: [char; 24],
    pub gname_raw: [u8; 24],
    pub rname: [char; 24],
    pub rname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcMsgStateChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub state: bool,
    pub state_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReset {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzChangeMaptype {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMapproperty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyRanking {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub ranking: i32,
    pub ranking_raw: [u8; 4],
    pub total: i32,
    pub total_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyEffect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub effect_id: i32,
    pub effect_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzChangeEffectstate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcStartCapture {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzTrycaptureMonster {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub target_aid: u32,
    pub target_aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcTrycaptureMonster {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzCommandPet {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub c_sub: i8,
    pub c_sub_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcPropertyPet {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub sz_name: [char; 24],
    pub sz_name_raw: [u8; 24],
    pub b_modified: u8,
    pub b_modified_raw: [u8; 1],
    pub n_level: i16,
    pub n_level_raw: [u8; 2],
    pub n_fullness: i16,
    pub n_fullness_raw: [u8; 2],
    pub n_relationship: i16,
    pub n_relationship_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcFeedPet {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub c_ret: i8,
    pub c_ret_raw: [u8; 1],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcChangestatePet {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i8,
    pub atype_raw: [u8; 1],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub data: i32,
    pub data_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzRenamePet {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub sz_name: [char; 24],
    pub sz_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcPeteggList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub egg_list: Vec<PeteggitemInfo>,
    pub egg_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzSelectPetegg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzPeteggInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzPetAct {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub data: i32,
    pub data_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcPetAct {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub data: i32,
    pub data_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcParChangeUser {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub var_id: u16,
    pub var_id_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSkillUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMakingarrowList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub arrow_list: Vec<ArrowitemInfo>,
    pub arrow_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqMakingarrow {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub id: u16,
    pub id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqChangecart {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub num: i16,
    pub num_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNpcspriteChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub value: u32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcShowdigit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqOpenstore2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub store_name: [char; 80],
    pub store_name_raw: [u8; 80],
    pub result: bool,
    pub result_raw: [u8; 1],
    pub store_list: Vec<StoreItem>,
    pub store_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcShowImage2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub image_name: [char; 64],
    pub image_name_raw: [u8; 64],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcChangeGuild {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub emblem_version: i16,
    pub emblem_version_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketScBillingInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub dw_amount_remain: u32,
    pub dw_amount_remain_raw: [u8; 4],
    pub dw_quantity_remain: u32,
    pub dw_quantity_remain_raw: [u8; 4],
    pub dw_reserved1: u32,
    pub dw_reserved1_raw: [u8; 4],
    pub dw_reserved2: u32,
    pub dw_reserved2_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcGuildInfo2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: i32,
    pub gdid_raw: [u8; 4],
    pub level: i32,
    pub level_raw: [u8; 4],
    pub user_num: i32,
    pub user_num_raw: [u8; 4],
    pub max_user_num: i32,
    pub max_user_num_raw: [u8; 4],
    pub user_average_level: i32,
    pub user_average_level_raw: [u8; 4],
    pub exp: i32,
    pub exp_raw: [u8; 4],
    pub max_exp: i32,
    pub max_exp_raw: [u8; 4],
    pub point: i32,
    pub point_raw: [u8; 4],
    pub honor: i32,
    pub honor_raw: [u8; 4],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub emblem_version: i32,
    pub emblem_version_raw: [u8; 4],
    pub guildname: [char; 24],
    pub guildname_raw: [u8; 24],
    pub master_name: [char; 24],
    pub master_name_raw: [u8; 24],
    pub manage_land: [char; 16],
    pub manage_land_raw: [u8; 16],
    pub zeny: i32,
    pub zeny_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzGuildZeny {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub zeny: i32,
    pub zeny_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcGuildZenyAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub ret: u8,
    pub ret_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcDispel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzRemoveAid {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub account_name: [char; 24],
    pub account_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzShift {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzRecall {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub account_name: [char; 24],
    pub account_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzRecallGid {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketAcAskPngameroom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaReplyPngameroom {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub permission: u8,
    pub permission_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqRemaintime {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcReplyRemaintime {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i32,
    pub result_raw: [u8; 4],
    pub expiration_date: i32,
    pub expiration_date_raw: [u8; 4],
    pub remain_time: i32,
    pub remain_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcInfoRemaintime {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub remain_time: i32,
    pub remain_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcBroadcast2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub font_color: u32,
    pub font_color_raw: [u8; 4],
    pub font_type: i16,
    pub font_type_raw: [u8; 2],
    pub font_size: i16,
    pub font_size_raw: [u8; 2],
    pub font_align: i16,
    pub font_align_raw: [u8; 2],
    pub font_y: i16,
    pub font_y_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcAddItemToStore2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketZcAddItemToCart2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketCsReqEncryption {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub enc_count: i8,
    pub enc_count_raw: [u8; 1],
    pub dec_count: i8,
    pub dec_count_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketScAckEncryption {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcUseItemAck2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub id: u16,
    pub id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub result: bool,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSkillEntry2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub creator_aid: u32,
    pub creator_aid_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub job: u8,
    pub job_raw: [u8; 1],
    pub is_visible: bool,
    pub is_visible_raw: [u8; 1],
    pub is_contens: bool,
    pub is_contens_raw: [u8; 1],
    pub msg: [char; 80],
    pub msg_raw: [u8; 80],
}

#[derive(Clone)]
pub struct PacketCzReqmakinghomun {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: bool,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzMonsterTalk {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub state_id: u8,
    pub state_id_raw: [u8; 1],
    pub skill_id: u8,
    pub skill_id_raw: [u8; 1],
    pub arg1: u8,
    pub arg1_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMonsterTalk {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub state_id: u8,
    pub state_id_raw: [u8; 1],
    pub skill_id: u8,
    pub skill_id_raw: [u8; 1],
    pub arg1: u8,
    pub arg1_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAutospelllist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: [i32; 7],
    pub skid_raw: [u8; 28],
}

#[derive(Clone)]
pub struct PacketCzSelectautospell {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: i32,
    pub skid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcDevotionlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub my_aid: u32,
    pub my_aid_raw: [u8; 4],
    pub aid: [u32; 5],
    pub aid_raw: [u8; 20],
    pub range: i16,
    pub range_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSpirits {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub num: i16,
    pub num_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBladestop {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub src_aid: u32,
    pub src_aid_raw: [u8; 4],
    pub dest_aid: u32,
    pub dest_aid_raw: [u8; 4],
    pub flag: i32,
    pub flag_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCombodelay {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub delay_time: u32,
    pub delay_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSound {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub file_name: [char; 24],
    pub file_name_raw: [u8; 24],
    pub act: u8,
    pub act_raw: [u8; 1],
    pub term: u32,
    pub term_raw: [u8; 4],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcOpenEditdlgstr {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzInputEditdlgstr {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub naid: u32,
    pub naid_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNotifyMaptypeproperty2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSpriteChange2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub value: u16,
    pub value_raw: [u8; 2],
    pub value2: u16,
    pub value2_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyNewentry2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMoveentry2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i16,
    pub effect_state_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i16,
    pub virtue_raw: [u8; 2],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub move_data: [u16; 6],
    pub move_data_raw: [u8; 12],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaReqHash {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckHash {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub secret: String,
    pub secret_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCaLogin2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd_md5: [char; 16],
    pub passwd_md5_raw: [u8; 16],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifySkill2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub attack_mt: i32,
    pub attack_mt_raw: [u8; 4],
    pub attacked_mt: i32,
    pub attacked_mt_raw: [u8; 4],
    pub damage: i32,
    pub damage_raw: [u8; 4],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqAccountname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckAccountname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcSpirits2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub num: i16,
    pub num_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcReqCouple {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzJoinCouple {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub answer: i32,
    pub answer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcStartCouple {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqJoinCouple {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCouplename {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub couple_name: [char; 24],
    pub couple_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzDoridori {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzMakeGroup2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
    pub item_pickup_rule: u8,
    pub item_pickup_rule_raw: [u8; 1],
    pub item_division_rule: u8,
    pub item_division_rule_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAddMemberToGroup2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub role: u32,
    pub role_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub item_pickup_rule: u8,
    pub item_pickup_rule_raw: [u8; 1],
    pub item_division_rule: u8,
    pub item_division_rule_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcCongratulation {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyPositionToGuildm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcGuildMemberMapChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gdid: u32,
    pub gdid_raw: [u8; 4],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketCzChopokgi {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNormalItemlist2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo2>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcCartNormalItemlist2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo2>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStoreNormalItemlist2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo2>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketAcNotifyError {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcUpdateCharstat2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub status: i32,
    pub status_raw: [u8; 4],
    pub sex: i16,
    pub sex_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub head_palette: i16,
    pub head_palette_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyEffect2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub effect_id: i32,
    pub effect_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcReqExchangeItem2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub level: i16,
    pub level_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckExchangeItem2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub level: i16,
    pub level_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcReqBaby {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzJoinBaby {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub answer: i32,
    pub answer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcStartBaby {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqJoinBaby {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCaLogin3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd_md5: [char; 16],
    pub passwd_md5_raw: [u8; 16],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
    pub client_info: u8,
    pub client_info_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketChDeleteChar2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub key: [char; 50],
    pub key_raw: [u8; 50],
}

#[derive(Clone)]
pub struct PacketZcRepairitemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_list: Vec<RepairitemInfo>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqItemrepair {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub target_item_info: RepairitemInfo,
    pub target_item_info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcAckItemrepair {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcHighjump {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaConnectInfoChanged {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcFriendsList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub friend_list: Vec<FRIEND>,
    pub friend_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzAddFriends {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzDeleteFriends {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCaExeHashcheck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub hash_value: [char; 16],
    pub hash_value_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketZcDivorce {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcFriendsState {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub state: bool,
    pub state_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcReqAddFriends {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub req_aid: u32,
    pub req_aid_raw: [u8; 4],
    pub req_gid: u32,
    pub req_gid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzAckReqAddFriends {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub req_aid: u32,
    pub req_aid_raw: [u8; 4],
    pub req_gid: u32,
    pub req_gid_raw: [u8; 4],
    pub result: i32,
    pub result_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAddFriendsList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcDeleteFriends {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketAcRefuseLoginR3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u32,
    pub error_code_raw: [u8; 4],
    pub block_date: [char; 20],
    pub block_date_raw: [u8; 20],
}

#[derive(Clone)]
pub struct PacketCzExeHashcheck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub client_type: u8,
    pub client_type_raw: [u8; 1],
    pub hash_value: [char; 16],
    pub hash_value_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketHcBlockCharacter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub character_list: Vec<TagCharacterBlockInfo>,
    pub character_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStarskill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub map_name: [char; 24],
    pub map_name_raw: [u8; 24],
    pub monster_id: i32,
    pub monster_id_raw: [u8; 4],
    pub star: u8,
    pub star_raw: [u8; 1],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqPvppoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckPvppoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub pvp: PVPINFO,
    pub pvp_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZhMovePvpworld {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqGiveMannerByname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzReqStatusGm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcAckStatusGm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub str: u8,
    pub str_raw: [u8; 1],
    pub standard_str: u8,
    pub standard_str_raw: [u8; 1],
    pub agi: u8,
    pub agi_raw: [u8; 1],
    pub standard_agi: u8,
    pub standard_agi_raw: [u8; 1],
    pub vit: u8,
    pub vit_raw: [u8; 1],
    pub standard_vit: u8,
    pub standard_vit_raw: [u8; 1],
    pub int: u8,
    pub int_raw: [u8; 1],
    pub standard_int: u8,
    pub standard_int_raw: [u8; 1],
    pub dex: u8,
    pub dex_raw: [u8; 1],
    pub standard_dex: u8,
    pub standard_dex_raw: [u8; 1],
    pub luk: u8,
    pub luk_raw: [u8; 1],
    pub standard_luk: u8,
    pub standard_luk_raw: [u8; 1],
    pub att_power: i16,
    pub att_power_raw: [u8; 2],
    pub refining_power: i16,
    pub refining_power_raw: [u8; 2],
    pub max_matt_power: i16,
    pub max_matt_power_raw: [u8; 2],
    pub min_matt_power: i16,
    pub min_matt_power_raw: [u8; 2],
    pub itemdef_power: i16,
    pub itemdef_power_raw: [u8; 2],
    pub plusdef_power: i16,
    pub plusdef_power_raw: [u8; 2],
    pub mdef_power: i16,
    pub mdef_power_raw: [u8; 2],
    pub plusmdef_power: i16,
    pub plusmdef_power_raw: [u8; 2],
    pub hit_success_value: i16,
    pub hit_success_value_raw: [u8; 2],
    pub avoid_success_value: i16,
    pub avoid_success_value_raw: [u8; 2],
    pub plus_avoid_success_value: i16,
    pub plus_avoid_success_value_raw: [u8; 2],
    pub critical_success_value: i16,
    pub critical_success_value_raw: [u8; 2],
    pub aspd: i16,
    pub aspd_raw: [u8; 2],
    pub plus_aspd: i16,
    pub plus_aspd_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSkillmsg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub msg_no: i32,
    pub msg_no_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcBabymsg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub msg_no: i32,
    pub msg_no_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzBlacksmithRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAlchemistRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBlacksmithRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 10],
    pub name_raw: [u8; 10],
    pub point: [i32; 10],
    pub point_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcAlchemistRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 10],
    pub name_raw: [u8; 10],
    pub point: [i32; 10],
    pub point_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcBlacksmithPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub point: i32,
    pub point_raw: [u8; 4],
    pub total_point: i32,
    pub total_point_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAlchemistPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub point: i32,
    pub point_raw: [u8; 4],
    pub total_point: i32,
    pub total_point_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzLesseffect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub is_less: i32,
    pub is_less_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcLesseffect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub is_less: i32,
    pub is_less_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyPkinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub win_point: i32,
    pub win_point_raw: [u8; 4],
    pub lose_point: i32,
    pub lose_point_raw: [u8; 4],
    pub kill_name: [char; 24],
    pub kill_name_raw: [u8; 24],
    pub killed_name: [char; 24],
    pub killed_name_raw: [u8; 24],
    pub expire_time: Filetime,
    pub expire_time_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNotifyCrazykiller {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub is_crazy_killer: i32,
    pub is_crazy_killer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyWeaponitemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_list: Vec<RepairitemInfo>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqWeaponrefine {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i32,
    pub index_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckWeaponrefine {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub msg: i32,
    pub msg_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcTaekwonPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub point: i32,
    pub point_raw: [u8; 4],
    pub total_point: i32,
    pub total_point_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzTaekwonRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcTaekwonRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 10],
    pub name_raw: [u8; 10],
    pub point: [i32; 10],
    pub point_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcGameGuard {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auth_data: [u32; 4],
    pub auth_data_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketCzAckGameGuard {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auth_data: [u32; 4],
    pub auth_data_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketZcStateChange3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyNewentry3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMoveentry3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub move_data: [u16; 6],
    pub move_data_raw: [u8; 12],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzCommandMer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub command: i8,
    pub command_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcPropertyHomun {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub sz_name: [char; 24],
    pub sz_name_raw: [u8; 24],
    pub b_modified: u8,
    pub b_modified_raw: [u8; 1],
    pub n_level: i16,
    pub n_level_raw: [u8; 2],
    pub n_fullness: i16,
    pub n_fullness_raw: [u8; 2],
    pub n_relationship: i16,
    pub n_relationship_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atk: i16,
    pub atk_raw: [u8; 2],
    pub matk: i16,
    pub matk_raw: [u8; 2],
    pub hit: i16,
    pub hit_raw: [u8; 2],
    pub critical: i16,
    pub critical_raw: [u8; 2],
    pub def: i16,
    pub def_raw: [u8; 2],
    pub mdef: i16,
    pub mdef_raw: [u8; 2],
    pub flee: i16,
    pub flee_raw: [u8; 2],
    pub aspd: i16,
    pub aspd_raw: [u8; 2],
    pub hp: i16,
    pub hp_raw: [u8; 2],
    pub max_hp: i16,
    pub max_hp_raw: [u8; 2],
    pub sp: i16,
    pub sp_raw: [u8; 2],
    pub max_sp: i16,
    pub max_sp_raw: [u8; 2],
    pub exp: i32,
    pub exp_raw: [u8; 4],
    pub max_exp: i32,
    pub max_exp_raw: [u8; 4],
    pub skpoint: i16,
    pub skpoint_raw: [u8; 2],
    pub atkrange: i16,
    pub atkrange_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcChangestateMer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i8,
    pub atype_raw: [u8; 1],
    pub state: i8,
    pub state_raw: [u8; 1],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub data: i32,
    pub data_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzRenameMer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzRequestMovenpc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub dest: [u8; 3],
    pub dest_raw: [u8; 3],
}

#[derive(Clone)]
pub struct PacketCzRequestActnpc {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub target_gid: u32,
    pub target_gid_raw: [u8; 4],
    pub action: u8,
    pub action_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzRequestMovetoowner {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcReqStorePassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: i16,
    pub info_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAckStorePassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub password: [char; 16],
    pub password_raw: [u8; 16],
    pub new_password: [char; 16],
    pub new_password_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketZcResultStorePassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub error_count: i16,
    pub error_count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcEventResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub event_item_count: u32,
    pub event_item_count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketHcRequestCharacterPassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub dummy_value: u32,
    pub dummy_value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMailGetList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMailReqGetList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub mail_number: i32,
    pub mail_number_raw: [u8; 4],
    pub mail_list: Vec<MailList>,
    pub mail_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzMailOpen {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMailReqOpen {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
    pub header: [char; 40],
    pub header_raw: [u8; 40],
    pub from_name: [char; 24],
    pub from_name_raw: [u8; 24],
    pub delete_time: i32,
    pub delete_time_raw: [u8; 4],
    pub money: u32,
    pub money_raw: [u8; 4],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u16,
    pub atype_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub msg_len: u8,
    pub msg_len_raw: [u8; 1],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzMailDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMailGetItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMailReqGetItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzMailResetItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzMailAddItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMailSend {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub receive_name: [char; 24],
    pub receive_name_raw: [u8; 24],
    pub header: [char; 40],
    pub header_raw: [u8; 40],
    pub msg_len: u32,
    pub msg_len_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcMailReqSend {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMailReceive {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: u32,
    pub mail_id_raw: [u8; 4],
    pub header: [char; 40],
    pub header_raw: [u8; 40],
    pub from_name: [char; 24],
    pub from_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzAuctionCreate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAuctionAddItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzAuctionAdd {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub now_money: u32,
    pub now_money_raw: [u8; 4],
    pub max_money: u32,
    pub max_money_raw: [u8; 4],
    pub delete_hour: i16,
    pub delete_hour_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAuctionAddCancel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auction_id: u32,
    pub auction_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzAuctionBuy {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auction_id: u32,
    pub auction_id_raw: [u8; 4],
    pub money: u32,
    pub money_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAuctionResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzAuctionItemSearch {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub auction_id: u32,
    pub auction_id_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub page: u16,
    pub page_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAuctionItemReqSearch {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub max_page: i32,
    pub max_page_raw: [u8; 4],
    pub number: i32,
    pub number_raw: [u8; 4],
    pub auction_item_list: Vec<AuctionItemSearchInfo>,
    pub auction_item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStarplace {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub which: i8,
    pub which_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzAgreeStarplace {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub which: i8,
    pub which_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAckMailAddItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAckAuctionAddItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAckMailDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
    pub result: u16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaReqGameGuardCheck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckGameGuard {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub uc_answer: u8,
    pub uc_answer_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMakingitemList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub id_list: Vec<u16>,
    pub id_list_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzReqMakingitem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mk_type: i16,
    pub mk_type_raw: [u8; 2],
    pub id: u16,
    pub id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAuctionReqMyInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAuctionReqMySellStop {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auction_id: u32,
    pub auction_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAuctionAckMySellStop {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAuctionWindows {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMailWindows {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketAcReqLoginOldekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub m_seed_value: [char; 9],
    pub m_seed_value_raw: [u8; 9],
}

#[derive(Clone)]
pub struct PacketAcReqLoginNewekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub m_seed_value: [char; 9],
    pub m_seed_value_raw: [u8; 9],
}

#[derive(Clone)]
pub struct PacketAcReqLoginCardpass {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub m_seed_value: [char; 9],
    pub m_seed_value_raw: [u8; 9],
}

#[derive(Clone)]
pub struct PacketCaAckLoginOldekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub m_seed_value: [char; 9],
    pub m_seed_value_raw: [u8; 9],
    pub m_ekey: [char; 9],
    pub m_ekey_raw: [u8; 9],
}

#[derive(Clone)]
pub struct PacketCaAckLoginNewekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub m_seed_value: [char; 9],
    pub m_seed_value_raw: [u8; 9],
    pub m_ekey: [char; 9],
    pub m_ekey_raw: [u8; 9],
}

#[derive(Clone)]
pub struct PacketCaAckLoginCardpass {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mcard_pass: [char; 28],
    pub mcard_pass_raw: [u8; 28],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailNotexist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailNotusesekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailNotusedekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailAuthrefuse {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailInputekey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailNotice {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckEkeyFailNeedcardpass {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckAuthekeyFailNotmatchcardpass {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: i16,
    pub error_code_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcAckFirstLogin {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcReqLoginAccountInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaAckLoginAccountInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub sex: i16,
    pub sex_raw: [u8; 2],
    pub b_point: i16,
    pub b_point_raw: [u8; 2],
    pub email: [char; 34],
    pub email_raw: [u8; 34],
}

#[derive(Clone)]
pub struct PacketAcAckPtIdInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub sz_ptid: [char; 21],
    pub sz_ptid_raw: [u8; 21],
    pub sz_ptnum_id: [char; 21],
    pub sz_ptnum_id_raw: [u8; 21],
}

#[derive(Clone)]
pub struct PacketCzReqMailReturn {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
    pub receive_name: [char; 24],
    pub receive_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcAckMailReturn {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub mail_id: i32,
    pub mail_id_raw: [u8; 4],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChEnter2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub user_level: u32,
    pub user_level_raw: [u8; 4],
    pub client_type: u16,
    pub client_type_raw: [u8; 2],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub mac_data: [char; 16],
    pub mac_data_raw: [u8; 16],
    pub i_account_sid: i32,
    pub i_account_sid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCaAcceptLogin2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub user_level: u32,
    pub user_level_raw: [u8; 4],
    pub last_login_ip: u32,
    pub last_login_ip_raw: [u8; 4],
    pub last_login_time: [char; 26],
    pub last_login_time_raw: [u8; 26],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub i_account_sid: i32,
    pub i_account_sid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCaLoginPcbang {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd: [char; 24],
    pub passwd_raw: [u8; 24],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
    pub ip: [char; 16],
    pub ip_raw: [u8; 16],
    pub mac_adress: [char; 13],
    pub mac_adress_raw: [u8; 13],
}

#[derive(Clone)]
pub struct PacketZcNotifyPcbang {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzHuntinglist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcHuntinglist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub hunting_list: Vec<PacketMobHunting>,
    pub hunting_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcPcbangEffect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub exp_factor: i32,
    pub exp_factor_raw: [u8; 4],
    pub exp_factor2: i32,
    pub exp_factor2_raw: [u8; 4],
    pub drop_factor: i32,
    pub drop_factor_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCaLogin4 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd_md5: [char; 16],
    pub passwd_md5_raw: [u8; 16],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
    pub mac_data: [char; 13],
    pub mac_data_raw: [u8; 13],
}

#[derive(Clone)]
pub struct PacketZcPropertyMerce {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub faith: i16,
    pub faith_raw: [u8; 2],
    pub summon_count: i16,
    pub summon_count_raw: [u8; 2],
    pub atk: i16,
    pub atk_raw: [u8; 2],
    pub matk: i16,
    pub matk_raw: [u8; 2],
    pub hit: i16,
    pub hit_raw: [u8; 2],
    pub critical: i16,
    pub critical_raw: [u8; 2],
    pub def: i16,
    pub def_raw: [u8; 2],
    pub mdef: i16,
    pub mdef_raw: [u8; 2],
    pub flee: i16,
    pub flee_raw: [u8; 2],
    pub aspd: i16,
    pub aspd_raw: [u8; 2],
    pub hp: i16,
    pub hp_raw: [u8; 2],
    pub max_hp: i16,
    pub max_hp_raw: [u8; 2],
    pub sp: i16,
    pub sp_raw: [u8; 2],
    pub max_sp: i16,
    pub max_sp_raw: [u8; 2],
    pub atkrange: i16,
    pub atkrange_raw: [u8; 2],
    pub exp: i32,
    pub exp_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcShandaProtect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub code_len: i16,
    pub code_len_raw: [u8; 2],
    pub code: String,
    pub code_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCaClientType {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub client_type: i16,
    pub client_type_raw: [u8; 2],
    pub n_ver: i32,
    pub n_ver_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcGangsiPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub point: i32,
    pub point_raw: [u8; 4],
    pub total_point: i32,
    pub total_point_raw: [u8; 4],
    pub packet_switch: i16,
    pub packet_switch_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzGangsiRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_switch: i16,
    pub packet_switch_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcGangsiRank {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 10],
    pub name_raw: [u8; 10],
    pub point: [i32; 10],
    pub point_raw: [u8; 40],
    pub packet_switch: i16,
    pub packet_switch_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAid {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyEffect3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub effect_id: i32,
    pub effect_id_raw: [u8; 4],
    pub numdata: i32,
    pub numdata_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcDeathQuestion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub qcategory: i16,
    pub qcategory_raw: [u8; 2],
    pub qnum: i16,
    pub qnum_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzDeathQuestion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub qanswer: i16,
    pub qanswer_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcPcCashPointItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub cash_point: u32,
    pub cash_point_raw: [u8; 4],
    pub item_list: Vec<PurchaseItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPcBuyCashPointItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcPcCashPointUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub cash_point: u32,
    pub cash_point_raw: [u8; 4],
    pub error: i16,
    pub error_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNpcShowefstUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub clevel: i32,
    pub clevel_raw: [u8; 4],
    pub show_efst: i32,
    pub show_efst_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketChSelectCharGoingtobeused {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub dw_aid: u32,
    pub dw_aid_raw: [u8; 4],
    pub n_count_selected_char: i32,
    pub n_count_selected_char_raw: [u8; 4],
    pub ardw_selected_gid: [u32; 9],
    pub ardw_selected_gid_raw: [u8; 36],
}

#[derive(Clone)]
pub struct PacketChReqIsValidCharname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub dw_aid: u32,
    pub dw_aid_raw: [u8; 4],
    pub dw_gid: u32,
    pub dw_gid_raw: [u8; 4],
    pub sz_char_name: [char; 24],
    pub sz_char_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketHcAckIsValidCharname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub s_result: i16,
    pub s_result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChReqChangeCharname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub dw_gid: u32,
    pub dw_gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketHcAckChangeCharname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub s_result: i16,
    pub s_result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMsg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub msg: u16,
    pub msg_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzStandingResurrection {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBossInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info_type: u8,
    pub info_type_raw: [u8; 1],
    pub x_pos: i32,
    pub x_pos_raw: [u8; 4],
    pub y_pos: i32,
    pub y_pos_raw: [u8; 4],
    pub min_hour: u16,
    pub min_hour_raw: [u8; 2],
    pub min_minute: u16,
    pub min_minute_raw: [u8; 2],
    pub max_hour: u16,
    pub max_hour_raw: [u8; 2],
    pub max_minute: u16,
    pub max_minute_raw: [u8; 2],
    pub name: [char; 51],
    pub name_raw: [u8; 51],
}

#[derive(Clone)]
pub struct PacketZcReadBook {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub book_id: u32,
    pub book_id_raw: [u8; 4],
    pub page: u32,
    pub page_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcEquipmentItemlist2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo2>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStoreEquipmentItemlist2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo2>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcCartEquipmentItemlist2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo2>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcCashTimeCounter {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub remain_second: u32,
    pub remain_second_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCashItemDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcItemPickupAck2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: u16,
    pub count_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub result: u8,
    pub result_raw: [u8; 1],
    pub hire_expire_date: i32,
    pub hire_expire_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMerInit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: i32,
    pub aid_raw: [u8; 4],
    pub atk: i16,
    pub atk_raw: [u8; 2],
    pub matk: i16,
    pub matk_raw: [u8; 2],
    pub hit: i16,
    pub hit_raw: [u8; 2],
    pub critical: i16,
    pub critical_raw: [u8; 2],
    pub def: i16,
    pub def_raw: [u8; 2],
    pub mdef: i16,
    pub mdef_raw: [u8; 2],
    pub flee: i16,
    pub flee_raw: [u8; 2],
    pub aspd: i16,
    pub aspd_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub hp: i32,
    pub hp_raw: [u8; 4],
    pub max_hp: i32,
    pub max_hp_raw: [u8; 4],
    pub sp: i32,
    pub sp_raw: [u8; 4],
    pub max_sp: i32,
    pub max_sp_raw: [u8; 4],
    pub expire_date: i32,
    pub expire_date_raw: [u8; 4],
    pub faith: i16,
    pub faith_raw: [u8; 2],
    pub toal_call_num: i32,
    pub toal_call_num_raw: [u8; 4],
    pub approval_monster_kill_counter: i32,
    pub approval_monster_kill_counter_raw: [u8; 4],
    pub atkrange: i16,
    pub atkrange_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMerProperty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atk: i16,
    pub atk_raw: [u8; 2],
    pub matk: i16,
    pub matk_raw: [u8; 2],
    pub hit: i16,
    pub hit_raw: [u8; 2],
    pub critical: i16,
    pub critical_raw: [u8; 2],
    pub def: i16,
    pub def_raw: [u8; 2],
    pub mdef: i16,
    pub mdef_raw: [u8; 2],
    pub flee: i16,
    pub flee_raw: [u8; 2],
    pub aspd: i16,
    pub aspd_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub hp: i16,
    pub hp_raw: [u8; 2],
    pub max_hp: i16,
    pub max_hp_raw: [u8; 2],
    pub sp: i16,
    pub sp_raw: [u8; 2],
    pub max_sp: i16,
    pub max_sp_raw: [u8; 2],
    pub expire_date: i32,
    pub expire_date_raw: [u8; 4],
    pub faith: i16,
    pub faith_raw: [u8; 2],
    pub toal_call_num: i32,
    pub toal_call_num_raw: [u8; 4],
    pub approval_monster_kill_counter: i32,
    pub approval_monster_kill_counter_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMerSkillinfoList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub skill_list: Vec<SKILLINFO>,
    pub skill_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcMerSkillinfoUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub spcost: i16,
    pub spcost_raw: [u8; 2],
    pub attack_range: i16,
    pub attack_range_raw: [u8; 2],
    pub upgradable: bool,
    pub upgradable_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzMerCommand {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub command: i8,
    pub command_raw: [u8; 1],
}

#[derive(Clone)]
pub struct UnusedPacketCzMerUseSkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub selected_level: i16,
    pub selected_level_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct UnusedPacketCzMerUpgradeSkilllevel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMerParChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub var: u16,
    pub var_raw: [u8; 2],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcGameguardLingoKey {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub lingo_key: PggLingoKeyTemp,
    pub lingo_key_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzKsyEvent {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcReqCashPassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: i16,
    pub info_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzAckCashPassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub password: [char; 16],
    pub password_raw: [u8; 16],
    pub new_password: [char; 16],
    pub new_password_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketZcResultCashPassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub error_count: i16,
    pub error_count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcRequestSecondPassword {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub dw_seed: u32,
    pub dw_seed_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCaLoginHan {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd: [char; 24],
    pub passwd_raw: [u8; 24],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
    pub m_sz_ip: [char; 16],
    pub m_sz_ip_raw: [u8; 16],
    pub m_sz_mac_addr: [char; 13],
    pub m_sz_mac_addr_raw: [u8; 13],
    pub is_han_game_user: u8,
    pub is_han_game_user_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcAllQuestList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub quest_count: i32,
    pub quest_count_raw: [u8; 4],
    pub quest_list: Vec<PacketZcQuestInfo>,
    pub quest_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcAllQuestMission {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub quest_mission_list: Vec<PacketZcQuestMissionInfo>,
    pub quest_mission_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcAddQuest {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
    pub active: bool,
    pub active_raw: [u8; 1],
    pub quest_svr_time: i32,
    pub quest_svr_time_raw: [u8; 4],
    pub quest_end_time: i32,
    pub quest_end_time_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub hunt: Vec<PacketZcMissionHunt>,
    pub hunt_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcDelQuest {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcUpdateMissionHunt {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub mob_hunt_list: Vec<PacketMobHunting>,
    pub mob_hunt_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzActiveQuest {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
    pub active: bool,
    pub active_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcActiveQuest {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
    pub active: bool,
    pub active_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcItemPickupParty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcShortcutKeyList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub short_cut_key: Vec<ShortCutKey>,
    pub short_cut_key_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzShortcutKeyChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub short_cut_key: ShortCutKey,
    pub short_cut_key_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcEquipitemDamaged {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub wear_location: u16,
    pub wear_location_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyPcbangPlayingTime {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub time_minute: i32,
    pub time_minute_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSrpacketr2Init {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub protect_factor: u16,
    pub protect_factor_raw: [u8; 2],
    pub deform_seed_factor: u32,
    pub deform_seed_factor_raw: [u8; 4],
    pub deform_add_factor: u32,
    pub deform_add_factor_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzSrpacketr2Start {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub protect_factor: u16,
    pub protect_factor_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNpcChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
    pub color: u32,
    pub color_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcFormatstringMsg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: u16,
    pub msg_raw: [u8; 2],
    pub value: String,
    pub value_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzPartyJoinReq {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcPartyJoinReqAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub answer: i32,
    pub answer_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcPartyJoinReq {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub grid: u32,
    pub grid_raw: [u8; 4],
    pub group_name: [char; 24],
    pub group_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketCzPartyJoinReqAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub grid: u32,
    pub grid_raw: [u8; 4],
    pub b_accept: bool,
    pub b_accept_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzPartyConfig {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub b_refuse_join_msg: bool,
    pub b_refuse_join_msg_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcPartyConfig {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub b_refuse_join_msg: bool,
    pub b_refuse_join_msg_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketHcRefuseSelectchar {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u8,
    pub error_code_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMemorialdungeonSubscriptionInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub memorial_dungeon_name: [char; 61],
    pub memorial_dungeon_name_raw: [u8; 61],
    pub priority_order_num: i16,
    pub priority_order_num_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMemorialdungeonSubscriptionNotify {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub priority_order_num: i16,
    pub priority_order_num_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcMemorialdungeonInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub memorial_dungeon_name: [char; 61],
    pub memorial_dungeon_name_raw: [u8; 61],
    pub destroy_date: u32,
    pub destroy_date_raw: [u8; 4],
    pub enter_time_out_date: u32,
    pub enter_time_out_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMemorialdungeonNotify {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub enter_limit_date: u32,
    pub enter_limit_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzMemorialdungeonCommand {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub command: i32,
    pub command_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcEquipmentItemlist3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo301>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStoreEquipmentItemlist3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo301>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcCartEquipmentItemlist3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<EquipmentitemExtrainfo301>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcNotifyBindOnEquip {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcItemPickupAck3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: u16,
    pub count_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub result: u8,
    pub result_raw: [u8; 1],
    pub hire_expire_date: i32,
    pub hire_expire_date_raw: [u8; 4],
    pub bind_on_equip_type: u16,
    pub bind_on_equip_type_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcIsvrDisconnect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzEquipwinMicroscope {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcEquipwinMicroscope {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub item_info: Vec<EquipmentitemExtrainfo301>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzConfig {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub config: i32,
    pub config_raw: [u8; 4],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcConfig {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub config: i32,
    pub config_raw: [u8; 4],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcConfigNotify {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub b_open_equipment_win: bool,
    pub b_open_equipment_win_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzBattlefieldChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcBattlefieldChat {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcBattlefieldNotifyCampinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub camp: i16,
    pub camp_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBattlefieldNotifyPoint {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub point_camp_a: i16,
    pub point_camp_a_raw: [u8; 2],
    pub point_camp_b: i16,
    pub point_camp_b_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBattlefieldNotifyPosition {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub job: u16,
    pub job_raw: [u8; 2],
    pub x: i16,
    pub x_raw: [u8; 2],
    pub y: i16,
    pub y_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBattlefieldNotifyHp {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub account_id: u32,
    pub account_id_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub hp: i16,
    pub hp_raw: [u8; 2],
    pub max_hp: i16,
    pub max_hp_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyAct2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub target_gid: u32,
    pub target_gid_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub attack_mt: i32,
    pub attack_mt_raw: [u8; 4],
    pub attacked_mt: i32,
    pub attacked_mt_raw: [u8; 4],
    pub damage: i32,
    pub damage_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
    pub left_damage: i32,
    pub left_damage_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzBotCheck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub is_bot: i32,
    pub is_bot_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMapproperty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub map_info_table: Vec<i32>,
    pub map_info_table_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcNormalItemlist3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo3>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcCartNormalItemlist3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo3>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcStoreNormalItemlist3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub item_info: Vec<NormalitemExtrainfo3>,
    pub item_info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcAcceptEnter2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub font: i16,
    pub font_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMoveentry4 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub move_data: [u16; 6],
    pub move_data_raw: [u8; 12],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyNewentry4 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry4 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyFont {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub font: i16,
    pub font_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcProgress {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub color: u32,
    pub color_raw: [u8; 4],
    pub time: u32,
    pub time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzProgress {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcProgressCancel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzOpenSimpleCashshopItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSimpleCashshopPointItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub cash_point: u32,
    pub cash_point_raw: [u8; 4],
    pub md_itemcount: i16,
    pub md_itemcount_raw: [u8; 2],
    pub md_item_size: i16,
    pub md_item_size_raw: [u8; 2],
    pub best_itemcount: i16,
    pub best_itemcount_raw: [u8; 2],
    pub best_itemsize: i16,
    pub best_itemsize_raw: [u8; 2],
    pub item_list: Vec<PurchaseItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzCloseWindow {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAhcGameGuard {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auth_data: [u32; 4],
    pub auth_data_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketCahAckGameGuard {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub auth_data: [u32; 4],
    pub auth_data_raw: [u8; 16],
}

#[derive(Clone)]
pub struct PacketCzEnter2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub auth_code: i32,
    pub auth_code_raw: [u8; 4],
    pub client_time: u32,
    pub client_time_raw: [u8; 4],
    pub sex: u8,
    pub sex_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzUseSkill2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub selected_level: i16,
    pub selected_level_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzUseItem2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSkillPostdelay {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub delay_tm: u32,
    pub delay_tm_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSkillPostdelayList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub delay_list: Vec<SkillPostdelay>,
    pub delay_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcMsgStateChange2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub state: bool,
    pub state_raw: [u8; 1],
    pub remain_ms: u32,
    pub remain_ms_raw: [u8; 4],
    pub val: [i32; 3],
    pub val_raw: [u8; 12],
}

#[derive(Clone)]
pub struct PacketZcMillenniumshield {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub num: i16,
    pub num_raw: [u8; 2],
    pub state: i16,
    pub state_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSkillinfoDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSkillSelectRequest {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub why: i32,
    pub why_raw: [u8; 4],
    pub skidlist: Vec<u16>,
    pub skidlist_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzSkillSelectResponse {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub why: i32,
    pub why_raw: [u8; 4],
    pub skid: u16,
    pub skid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSimpleCashPointItemlist {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub cash_point: u32,
    pub cash_point_raw: [u8; 4],
    pub item_list: Vec<PurchaseItem>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzSimpleBuyCashPointItem {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcQuestNotifyEffect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub npc_id: u32,
    pub npc_id_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub effect: i16,
    pub effect_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketHcCharacterList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub character_list: Vec<CharacterList>,
    pub character_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcHackshErrorMsg {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_id: i16,
    pub error_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzClientVersion {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub client_ver: i32,
    pub client_ver_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzCloseSimplecashShop {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcEsResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub es_no: i16,
    pub es_no_raw: [u8; 2],
    pub es_msg: i16,
    pub es_msg_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzEsGetList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcEsList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzEsChoose {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub es_no: i16,
    pub es_no_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzEsCancel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub es_no: i16,
    pub es_no_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcEsReady {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub es_no: i16,
    pub es_no_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcEsGoto {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub es_no: i16,
    pub es_no_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzGroupinfoChangeV2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub exp_option: u32,
    pub exp_option_raw: [u8; 4],
    pub item_pickup_rule: u8,
    pub item_pickup_rule_raw: [u8; 1],
    pub item_division_rule: u8,
    pub item_division_rule_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcReqGroupinfoChangeV2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub exp_option: u32,
    pub exp_option_raw: [u8; 4],
    pub item_pickup_rule: u8,
    pub item_pickup_rule_raw: [u8; 1],
    pub item_division_rule: u8,
    pub item_division_rule_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcShortcutKeyListV2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub short_cut_key: Vec<ShortCutKey>,
    pub short_cut_key_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzChangeGroupMaster {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcHoParChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub var: u16,
    pub var_raw: [u8; 2],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzSeekParty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub option: u32,
    pub option_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSeekParty {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub job: u32,
    pub job_raw: [u8; 4],
    pub level: u32,
    pub level_raw: [u8; 4],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub option: u32,
    pub option_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzSeekPartyMember {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub job: u32,
    pub job_raw: [u8; 4],
    pub level: u32,
    pub level_raw: [u8; 4],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub option: u32,
    pub option_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcSeekPartyMember {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub job: u32,
    pub job_raw: [u8; 4],
    pub level: u32,
    pub level_raw: [u8; 4],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub option: u32,
    pub option_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcEsNotiMyinfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub es_no: i16,
    pub es_no_raw: [u8; 2],
    pub esname: [char; 54],
    pub esname_raw: [u8; 54],
}

#[derive(Clone)]
pub struct PacketZcSkillinfoUpdate2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub spcost: i16,
    pub spcost_raw: [u8; 2],
    pub attack_range: i16,
    pub attack_range_raw: [u8; 2],
    pub upgradable: bool,
    pub upgradable_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMsgValue {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub msg: u16,
    pub msg_raw: [u8; 2],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcItemlistwinOpen {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzItemlistwinRes {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub action: i32,
    pub action_raw: [u8; 4],
    pub material_list: u16,
    pub material_list_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChEnterCheckbot {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub dw_aid: u32,
    pub dw_aid_raw: [u8; 4],
    pub sz_string_info: String,
    pub sz_string_info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcMsgSkill {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub msgid: i32,
    pub msgid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketChCheckbot {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub dw_aid: u32,
    pub dw_aid_raw: [u8; 4],
    pub sz_string_info: [char; 24],
    pub sz_string_info_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketHcCheckbot {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub img: String,
    pub img_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketHcCheckbotResult {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub result: u8,
    pub result_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzBattleFieldList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBattleFieldList {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub ack_type: i16,
    pub ack_type_raw: [u8; 2],
    pub info_list: Vec<BattleFieldInfo>,
    pub info_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzJoinBattleField {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub join_team: i16,
    pub join_team_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcJoinBattleField {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub join_team: i16,
    pub join_team_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzCancelBattleField {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcCancelBattleField {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqBattleStateMonitor {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub power_switch: i16,
    pub power_switch_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckBattleStateMonitor {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub play_count: i16,
    pub play_count_raw: [u8; 2],
    pub battle_state: i16,
    pub battle_state_raw: [u8; 2],
    pub team_count_a: i16,
    pub team_count_a_raw: [u8; 2],
    pub team_count_b: i16,
    pub team_count_b_raw: [u8; 2],
    pub my_count: i16,
    pub my_count_raw: [u8; 2],
    pub join_team: i16,
    pub join_team_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBattleNotiStartStep {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcBattleJoinNotiDefer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcBattleJoinDisableState {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub enable: bool,
    pub enable_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzGmFullstrip {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub target_aid: u32,
    pub target_aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyExp {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub amount: i32,
    pub amount_raw: [u8; 4],
    pub var_id: u16,
    pub var_id_raw: [u8; 2],
    pub exp_type: i16,
    pub exp_type_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMoveentry7 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub move_data: [u16; 6],
    pub move_data_raw: [u8; 12],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcNotifyNewentry5 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry5 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: i32,
    pub weapon_raw: [u8; 4],
    pub accessory: i16,
    pub accessory_raw: [u8; 2],
    pub accessory2: i16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: i16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: i16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: i16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: i16,
    pub head_dir_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcDeleteItemFromBody {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub delete_type: i16,
    pub delete_type_raw: [u8; 2],
    pub index: u16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcUseskillAck2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub target_id: u32,
    pub target_id_raw: [u8; 4],
    pub x_pos: i16,
    pub x_pos_raw: [u8; 2],
    pub y_pos: i16,
    pub y_pos_raw: [u8; 2],
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub property: u32,
    pub property_raw: [u8; 4],
    pub delay_time: u32,
    pub delay_time_raw: [u8; 4],
    pub is_disposable: bool,
    pub is_disposable_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcChangeGroupMaster {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub old_master_aid: u32,
    pub old_master_aid_raw: [u8; 4],
    pub new_master_aid: u32,
    pub new_master_aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcPlayNpcBgm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub bgm: [char; 24],
    pub bgm_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcDefineCheck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub result: i32,
    pub result_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcPcPurchaseItemlistFrommc2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub unique_id: u32,
    pub unique_id_raw: [u8; 4],
    pub item_list: Vec<PurchaseItemFrommc>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPcPurchaseItemlistFrommc2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub unique_id: u32,
    pub unique_id_raw: [u8; 4],
    pub item_list: Vec<CzPurchaseItemFrommc>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPartyBookingReqRegister {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub register_info: PartyBookingDetail,
    pub register_info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcPartyBookingAckRegister {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzPartyBookingReqSearch {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub map_id: i16,
    pub map_id_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub last_index: u32,
    pub last_index_raw: [u8; 4],
    pub result_count: i16,
    pub result_count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcPartyBookingAckSearch {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub is_exist_more_result: bool,
    pub is_exist_more_result_raw: [u8; 1],
    pub info: Vec<PartyBookingAdInfo>,
    pub info_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzPartyBookingReqDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcPartyBookingAckDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzPartyBookingReqUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub job: [i16; 6],
    pub job_raw: [u8; 12],
}

#[derive(Clone)]
pub struct PacketZcPartyBookingNotifyInsert {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub info: PartyBookingAdInfo,
    pub info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcPartyBookingNotifyUpdate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u32,
    pub index_raw: [u8; 4],
    pub job1: i16,
    pub job1_raw: [u8; 2],
    pub job2: i16,
    pub job2_raw: [u8; 2],
    pub job3: i16,
    pub job3_raw: [u8; 2],
    pub job4: i16,
    pub job4_raw: [u8; 2],
    pub job5: i16,
    pub job5_raw: [u8; 2],
    pub job6: i16,
    pub job6_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcPartyBookingNotifyDelete {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: u32,
    pub index_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzSimpleCashBtnshow {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSimpleCashBtnshow {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub show: bool,
    pub show_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcNotifyHpToGroupmR2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub hp: i32,
    pub hp_raw: [u8; 4],
    pub maxhp: i32,
    pub maxhp_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAddExchangeItem2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub count: i32,
    pub count_raw: [u8; 4],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PacketZcOpenBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub count: u8,
    pub count_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzReqOpenBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub limit_zeny: u32,
    pub limit_zeny_raw: [u8; 4],
    pub result: u8,
    pub result_raw: [u8; 1],
    pub store_name: [char; 80],
    pub store_name_raw: [u8; 80],
    pub item_list: Vec<ProductinfoInBuyingStore>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcFailedOpenBuyingStoreToBuyer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub total_weight: i32,
    pub total_weight_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMyitemlistBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub limit_zeny: i32,
    pub limit_zeny_raw: [u8; 4],
    pub item_list: Vec<BuyingStoreItemlist>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcBuyingStoreEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
    pub store_name: [char; 80],
    pub store_name_raw: [u8; 80],
}

#[derive(Clone)]
pub struct PacketCzReqCloseBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcDisappearBuyingStoreEntry {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqClickToBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckItemlistBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
    pub store_id: u32,
    pub store_id_raw: [u8; 4],
    pub limit_zeny: i32,
    pub limit_zeny_raw: [u8; 4],
    pub item_list: Vec<BuyingStoreItemlist>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketCzReqTradeBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub maker_aid: u32,
    pub maker_aid_raw: [u8; 4],
    pub store_id: u32,
    pub store_id_raw: [u8; 4],
    pub item_list: Vec<TradeItemBuyingStore>,
    pub item_list_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcFailedTradeBuyingStoreToBuyer {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcUpdateItemFromBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub limit_zeny: i32,
    pub limit_zeny_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcItemDeleteBuyingStore {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub zeny: i32,
    pub zeny_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcElInit {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: i32,
    pub aid_raw: [u8; 4],
    pub hp: i32,
    pub hp_raw: [u8; 4],
    pub max_hp: i32,
    pub max_hp_raw: [u8; 4],
    pub sp: i32,
    pub sp_raw: [u8; 4],
    pub max_sp: i32,
    pub max_sp_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcElParChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub var: u16,
    pub var_raw: [u8; 2],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcBroadcast4 {
    pub raw: Vec<u8>,
    pub pakcet_type: i16,
    pub pakcet_type_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub msgtype: u8,
    pub msgtype_raw: [u8; 1],
    pub color_rgb: u32,
    pub color_rgb_raw: [u8; 4],
    pub msg: String,
    pub msg_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketZcCostumeSpriteChange {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub value: i32,
    pub value_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketAcOtpUser {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaOtpAuthReq {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub otpcode: [char; 7],
    pub otpcode_raw: [u8; 7],
}

#[derive(Clone)]
pub struct PacketAcOtpAuthAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub login_result: u16,
    pub login_result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcFailedTradeBuyingStoreToSeller {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: i16,
    pub result_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCaSsoLoginReqa {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub mac_addr: [char; 17],
    pub mac_addr_raw: [u8; 17],
    pub ip_addr: [char; 15],
    pub ip_addr_raw: [u8; 15],
    pub t1: String,
    pub t1_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCaSsoLoginReq {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub version: u32,
    pub version_raw: [u8; 4],
    pub clienttype: u8,
    pub clienttype_raw: [u8; 1],
    pub id: [char; 24],
    pub id_raw: [u8; 24],
    pub passwd: [char; 27],
    pub passwd_raw: [u8; 27],
    pub mac_adress: [char; 17],
    pub mac_adress_raw: [u8; 17],
    pub ip: [char; 15],
    pub ip_raw: [u8; 15],
    pub t1: String,
    pub t1_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketAcSsoLoginAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub result: u16,
    pub result_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChDeleteChar3Reserved {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketHcDeleteChar3Reserved {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub result: i32,
    pub result_raw: [u8; 4],
    pub delete_reserved_date: i32,
    pub delete_reserved_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketChDeleteChar3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub birth: [char; 6],
    pub birth_raw: [u8; 6],
}

#[derive(Clone)]
pub struct PacketHcDeleteChar3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub result: i32,
    pub result_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketChDeleteChar3Cancel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketHcDeleteChar3Cancel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub result: i32,
    pub result_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzSearchStoreInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub store_type: u8,
    pub store_type_raw: [u8; 1],
    pub max_price: u32,
    pub max_price_raw: [u8; 4],
    pub min_price: u32,
    pub min_price_raw: [u8; 4],
    pub item_idlist_size: u8,
    pub item_idlist_size_raw: [u8; 1],
    pub card_idlist_size: u8,
    pub card_idlist_size_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcSearchStoreInfoAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub is_first_page: bool,
    pub is_first_page_raw: [u8; 1],
    pub is_nex_page: bool,
    pub is_nex_page_raw: [u8; 1],
    pub remained_search_cnt: u8,
    pub remained_search_cnt_raw: [u8; 1],
    pub ssilist: Vec<ResultItemInfo>,
    pub ssilist_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct PacketZcSearchStoreInfoFailed {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub reason: u8,
    pub reason_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzSearchStoreInfoNextPage {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcAckBanGuildSso {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
    pub reason_desc: [char; 40],
    pub reason_desc_raw: [u8; 40],
}

#[derive(Clone)]
pub struct PacketZcOpenSearchStoreInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub open_type: i16,
    pub open_type_raw: [u8; 2],
    pub search_cnt_max: u8,
    pub search_cnt_max_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzCloseSearchStoreInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzSsilistItemClick {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub ssiid: u32,
    pub ssiid_raw: [u8; 4],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcSsilistItemClickAck {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub x: i16,
    pub x_raw: [u8; 2],
    pub y: i16,
    pub y_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketAcRefuseLoginR2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub error_code: u32,
    pub error_code_raw: [u8; 4],
    pub block_date: [char; 20],
    pub block_date_raw: [u8; 20],
}

#[derive(Clone)]
pub struct PacketChSelectAccessibleMapname {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub char_num: u8,
    pub char_num_raw: [u8; 1],
    pub map_list_num: u8,
    pub map_list_num_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketCzRequestMove2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub dest: [u16; 3],
    pub dest_raw: [u8; 6],
}

#[derive(Clone)]
pub struct PacketChSendMapInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub map_server_ip: u32,
    pub map_server_ip_raw: [u8; 4],
    pub map_server_port: i16,
    pub map_server_port_raw: [u8; 2],
    pub dns_host: [char; 128],
    pub dns_host_raw: [u8; 128],
}

#[derive(Clone)]
pub struct PacketHcAcceptEnterNeoUnionHeader {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_len: i16,
    pub packet_len_raw: [u8; 2],
    pub char_slot: i8,
    pub char_slot_raw: [u8; 1],
    pub max_char: i16,
    pub max_char_raw: [u8; 2],
    pub premium_slot_start: i8,
    pub premium_slot_start_raw: [u8; 1],
    pub premium_slot_end: i8,
    pub premium_slot_end_raw: [u8; 1],
    pub empty_buffer: [char; 20],
    pub empty_buffer_raw: [u8; 20],
    pub char_info: PacketHcAcceptEnterNeoUnion,
    pub char_info_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzPing {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAid2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketMapConnection {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketPincodeLoginstate {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub pincode_seed: i32,
    pub pincode_seed_raw: [u8; 4],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub response: i16,
    pub response_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketChMakeChar3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub char_num: u8,
    pub char_num_raw: [u8; 1],
    pub head_pal: i16,
    pub head_pal_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub class: i32,
    pub class_raw: [u8; 4],
    pub sex: u8,
    pub sex_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketChDeleteChar4Reserved {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketHcDeleteChar4Reserved {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub result: i32,
    pub result_raw: [u8; 4],
    pub delete_reserved_date: i32,
    pub delete_reserved_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcInventoryExpansionInfo {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub expansion_size: i16,
    pub expansion_size_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcOverweightPercent {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub percent: i32,
    pub percent_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzReqDisconnect2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub empty: i16,
    pub empty_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcReqDisconnectAck2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub empty: i16,
    pub empty_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketCzReqnameall2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcAckReqnameall2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub party_name: [char; 24],
    pub party_name_raw: [u8; 24],
    pub guild_name: [char; 24],
    pub guild_name_raw: [u8; 24],
    pub position_name: [char; 24],
    pub position_name_raw: [u8; 24],
    pub title_id: i32,
    pub title_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketCzRequestTime2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub client_time: u32,
    pub client_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcMsgColor {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub msg_id: u16,
    pub msg_id_raw: [u8; 2],
    pub msg_color: u32,
    pub msg_color_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcNotifyMapproperty2 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub atype: i16,
    pub atype_raw: [u8; 2],
    pub flags: u32,
    pub flags_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcHatEffect {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub len: i16,
    pub len_raw: [u8; 2],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub status: u8,
    pub status_raw: [u8; 1],
    pub effect: Vec<u16>,
    pub effect_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct PacketCzBlockingPlayCancel {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcLoadConfirm {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry6 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: u32,
    pub weapon_raw: [u8; 4],
    pub accessory: u16,
    pub accessory_raw: [u8; 2],
    pub shield: u32,
    pub shield_raw: [u8; 4],
    pub accessory2: u16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: u16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: u16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: u16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: u16,
    pub head_dir_raw: [u8; 2],
    pub robe: u16,
    pub robe_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
    pub max_hp: u32,
    pub max_hp_raw: [u8; 4],
    pub hp: u32,
    pub hp_raw: [u8; 4],
    pub is_boss: bool,
    pub is_boss_raw: [u8; 1],
    pub body: i16,
    pub body_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcNotifyStandentry7 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: u32,
    pub weapon_raw: [u8; 4],
    pub accessory: u16,
    pub accessory_raw: [u8; 2],
    pub shield: u32,
    pub shield_raw: [u8; 4],
    pub accessory2: u16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: u16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: u16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: u16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: u16,
    pub head_dir_raw: [u8; 2],
    pub robe: u16,
    pub robe_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
    pub max_hp: u32,
    pub max_hp_raw: [u8; 4],
    pub hp: u32,
    pub hp_raw: [u8; 4],
    pub is_boss: bool,
    pub is_boss_raw: [u8; 1],
    pub body: i16,
    pub body_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PacketZcNotifyMoveentry8 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub packet_length: i16,
    pub packet_length_raw: [u8; 2],
    pub objecttype: u8,
    pub objecttype_raw: [u8; 1],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub speed: i16,
    pub speed_raw: [u8; 2],
    pub body_state: i16,
    pub body_state_raw: [u8; 2],
    pub health_state: i16,
    pub health_state_raw: [u8; 2],
    pub effect_state: i32,
    pub effect_state_raw: [u8; 4],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub weapon: u32,
    pub weapon_raw: [u8; 4],
    pub accessory: u16,
    pub accessory_raw: [u8; 2],
    pub move_start_time: u32,
    pub move_start_time_raw: [u8; 4],
    pub shield: u32,
    pub shield_raw: [u8; 4],
    pub accessory2: u16,
    pub accessory2_raw: [u8; 2],
    pub accessory3: u16,
    pub accessory3_raw: [u8; 2],
    pub headpalette: u16,
    pub headpalette_raw: [u8; 2],
    pub bodypalette: u16,
    pub bodypalette_raw: [u8; 2],
    pub head_dir: u16,
    pub head_dir_raw: [u8; 2],
    pub robe: u16,
    pub robe_raw: [u8; 2],
    pub guid: u32,
    pub guid_raw: [u8; 4],
    pub gemblem_ver: i16,
    pub gemblem_ver_raw: [u8; 2],
    pub honor: i16,
    pub honor_raw: [u8; 2],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub is_pkmode_on: bool,
    pub is_pkmode_on_raw: [u8; 1],
    pub sex: u8,
    pub sex_raw: [u8; 1],
    pub pos_dir: [u8; 3],
    pub pos_dir_raw: [u8; 3],
    pub x_size: u8,
    pub x_size_raw: [u8; 1],
    pub y_size: u8,
    pub y_size_raw: [u8; 1],
    pub clevel: i16,
    pub clevel_raw: [u8; 2],
    pub font: i16,
    pub font_raw: [u8; 2],
    pub max_hp: u32,
    pub max_hp_raw: [u8; 4],
    pub hp: u32,
    pub hp_raw: [u8; 4],
    pub is_boss: bool,
    pub is_boss_raw: [u8; 1],
    pub body: i16,
    pub body_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcNotifyAct3 {
    pub raw: Vec<u8>,
    pub packet_id: i16,
    pub packet_id_raw: [u8; 2],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub target_gid: u32,
    pub target_gid_raw: [u8; 4],
    pub start_time: u32,
    pub start_time_raw: [u8; 4],
    pub attack_mt: i32,
    pub attack_mt_raw: [u8; 4],
    pub attacked_mt: i32,
    pub attacked_mt_raw: [u8; 4],
    pub damage: i32,
    pub damage_raw: [u8; 4],
    pub is_sp_damaged: bool,
    pub is_sp_damaged_raw: [u8; 1],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub action: u8,
    pub action_raw: [u8; 1],
    pub left_damage: i32,
    pub left_damage_raw: [u8; 4],
}

#[derive(Clone)]
pub struct ServerAddr {
    pub raw: Vec<u8>,
    pub ip: u32,
    pub ip_raw: [u8; 4],
    pub port: i16,
    pub port_raw: [u8; 2],
    pub name: [char; 20],
    pub name_raw: [u8; 20],
    pub user_count: u16,
    pub user_count_raw: [u8; 2],
    pub state: u16,
    pub state_raw: [u8; 2],
    pub property: u16,
    pub property_raw: [u8; 2],
}

#[derive(Clone)]
pub struct ServerAddr2 {
    pub raw: Vec<u8>,
    pub ip: u32,
    pub ip_raw: [u8; 4],
    pub port: i16,
    pub port_raw: [u8; 2],
    pub name: [char; 20],
    pub name_raw: [u8; 20],
    pub user_count: u16,
    pub user_count_raw: [u8; 2],
    pub state: u16,
    pub state_raw: [u8; 2],
    pub property: u16,
    pub property_raw: [u8; 2],
    pub unknown2: [char; 128],
    pub unknown2_raw: [u8; 128],
}

#[derive(Clone)]
pub struct CharacterInfoNeoUnion {
    pub raw: Vec<u8>,
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub exp_64: u64,
    pub exp_64_raw: [u8; 8],
    pub exp: u32,
    pub exp_raw: [u8; 4],
    pub money: u32,
    pub money_raw: [u8; 4],
    pub jobexp_64: u64,
    pub jobexp_64_raw: [u8; 8],
    pub jobexp: u32,
    pub jobexp_raw: [u8; 4],
    pub joblevel: u32,
    pub joblevel_raw: [u8; 4],
    pub bodystate: u32,
    pub bodystate_raw: [u8; 4],
    pub healthstate: u32,
    pub healthstate_raw: [u8; 4],
    pub effectstate: i32,
    pub effectstate_raw: [u8; 4],
    pub virtue: i32,
    pub virtue_raw: [u8; 4],
    pub honor: i32,
    pub honor_raw: [u8; 4],
    pub status_point: u16,
    pub status_point_raw: [u8; 2],
    pub hp: u32,
    pub hp_raw: [u8; 4],
    pub hp_16: u16,
    pub hp_16_raw: [u8; 2],
    pub maxhp: u32,
    pub maxhp_raw: [u8; 4],
    pub maxhp_16: u16,
    pub maxhp_16_raw: [u8; 2],
    pub sp: u16,
    pub sp_raw: [u8; 2],
    pub maxsp: u16,
    pub maxsp_raw: [u8; 2],
    pub speed: u16,
    pub speed_raw: [u8; 2],
    pub class: u16,
    pub class_raw: [u8; 2],
    pub head: u16,
    pub head_raw: [u8; 2],
    pub body: u16,
    pub body_raw: [u8; 2],
    pub weapon: u16,
    pub weapon_raw: [u8; 2],
    pub level: u16,
    pub level_raw: [u8; 2],
    pub skill_point: u16,
    pub skill_point_raw: [u8; 2],
    pub head_bottom: u16,
    pub head_bottom_raw: [u8; 2],
    pub shield: u16,
    pub shield_raw: [u8; 2],
    pub head_top: u16,
    pub head_top_raw: [u8; 2],
    pub head_mid: u16,
    pub head_mid_raw: [u8; 2],
    pub hair_color: u16,
    pub hair_color_raw: [u8; 2],
    pub body_color: u16,
    pub body_color_raw: [u8; 2],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
    pub str: u8,
    pub str_raw: [u8; 1],
    pub agi: u8,
    pub agi_raw: [u8; 1],
    pub vit: u8,
    pub vit_raw: [u8; 1],
    pub int: u8,
    pub int_raw: [u8; 1],
    pub dex: u8,
    pub dex_raw: [u8; 1],
    pub luk: u8,
    pub luk_raw: [u8; 1],
    pub char_num: i8,
    pub char_num_raw: [u8; 1],
    pub haircolor: u8,
    pub haircolor_raw: [u8; 1],
    pub b_is_changed_char_name: u16,
    pub b_is_changed_char_name_raw: [u8; 2],
    pub last_map: [char; 16],
    pub last_map_raw: [u8; 16],
    pub delete_date: u32,
    pub delete_date_raw: [u8; 4],
    pub robe: u32,
    pub robe_raw: [u8; 4],
    pub slot_addon: u32,
    pub slot_addon_raw: [u8; 4],
    pub rename_addon: u32,
    pub rename_addon_raw: [u8; 4],
    pub sex: u8,
    pub sex_raw: [u8; 1],
}

#[derive(Clone)]
pub struct ZserverAddr {
    pub raw: Vec<u8>,
    pub ip: u32,
    pub ip_raw: [u8; 4],
    pub port: i16,
    pub port_raw: [u8; 2],
}

#[derive(Clone)]
pub struct EQUIPSLOTINFO {
    pub raw: Vec<u8>,
    pub card1: u16,
    pub card1_raw: [u8; 2],
    pub card2: u16,
    pub card2_raw: [u8; 2],
    pub card3: u16,
    pub card3_raw: [u8; 2],
    pub card4: u16,
    pub card4_raw: [u8; 2],
}

#[derive(Clone)]
pub struct NormalitemExtrainfo {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub wear_state: u16,
    pub wear_state_raw: [u8; 2],
}

#[derive(Clone)]
pub struct EquipmentitemExtrainfo {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub wear_state: u16,
    pub wear_state_raw: [u8; 2],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct PurchaseItem {
    pub raw: Vec<u8>,
    pub price: i32,
    pub price_raw: [u8; 4],
    pub discountprice: i32,
    pub discountprice_raw: [u8; 4],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct SellItem {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub price: i32,
    pub price_raw: [u8; 4],
    pub overchargeprice: i32,
    pub overchargeprice_raw: [u8; 4],
}

#[derive(Clone)]
pub struct CzPurchaseItem {
    pub raw: Vec<u8>,
    pub count: i16,
    pub count_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct CzSellItem {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct WhisperItem {
    pub raw: Vec<u8>,
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct RoomMember {
    pub raw: Vec<u8>,
    pub role: u32,
    pub role_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct GroupmemberInfo {
    pub raw: Vec<u8>,
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub character_name: [char; 24],
    pub character_name_raw: [u8; 24],
    pub map_name: [char; 16],
    pub map_name_raw: [u8; 16],
    pub role: u8,
    pub role_raw: [u8; 1],
    pub state: u8,
    pub state_raw: [u8; 1],
}

#[derive(Clone)]
pub struct SKILLINFO {
    pub raw: Vec<u8>,
    pub skid: i16,
    pub skid_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub spcost: i16,
    pub spcost_raw: [u8; 2],
    pub attack_range: i16,
    pub attack_range_raw: [u8; 2],
    pub skill_name: [char; 24],
    pub skill_name_raw: [u8; 24],
    pub upgradable: i8,
    pub upgradable_raw: [u8; 1],
}

#[derive(Clone)]
pub struct StoreItem {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub price: i32,
    pub price_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PurchaseItemFrommc {
    pub raw: Vec<u8>,
    pub price: i32,
    pub price_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: u8,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: u8,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct CzPurchaseItemFrommc {
    pub raw: Vec<u8>,
    pub count: i16,
    pub count_raw: [u8; 2],
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PurchaseMyitem {
    pub raw: Vec<u8>,
    pub price: i32,
    pub price_raw: [u8; 4],
    pub index: i16,
    pub index_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub is_identified: u8,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: u8,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct RelatedGuild {
    pub raw: Vec<u8>,
    pub gdid: i32,
    pub gdid_raw: [u8; 4],
    pub relation: i32,
    pub relation_raw: [u8; 4],
    pub guild_name: [char; 24],
    pub guild_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct GuildMembermgrInfo {
    pub raw: Vec<u8>,
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub head_type: i16,
    pub head_type_raw: [u8; 2],
    pub head_palette: i16,
    pub head_palette_raw: [u8; 2],
    pub sex: i16,
    pub sex_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub member_exp: i32,
    pub member_exp_raw: [u8; 4],
    pub current_state: i32,
    pub current_state_raw: [u8; 4],
    pub gposition_id: i32,
    pub gposition_id_raw: [u8; 4],
    pub memo: [char; 50],
    pub memo_raw: [u8; 50],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct MemberPositionInfo {
    pub raw: Vec<u8>,
    pub aid: i32,
    pub aid_raw: [u8; 4],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub position_id: i32,
    pub position_id_raw: [u8; 4],
}

#[derive(Clone)]
pub struct GuildMemberPositionInfo {
    pub raw: Vec<u8>,
    pub position_id: i32,
    pub position_id_raw: [u8; 4],
    pub right: i32,
    pub right_raw: [u8; 4],
    pub ranking: i32,
    pub ranking_raw: [u8; 4],
    pub pay_rate: i32,
    pub pay_rate_raw: [u8; 4],
}

#[derive(Clone)]
pub struct GuildRegPositionInfo {
    pub raw: Vec<u8>,
    pub position_id: i32,
    pub position_id_raw: [u8; 4],
    pub right: i32,
    pub right_raw: [u8; 4],
    pub ranking: i32,
    pub ranking_raw: [u8; 4],
    pub pay_rate: i32,
    pub pay_rate_raw: [u8; 4],
    pub pos_name: [char; 24],
    pub pos_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct GuildBanInfo {
    pub raw: Vec<u8>,
    pub charname: [char; 24],
    pub charname_raw: [u8; 24],
    pub account: [char; 24],
    pub account_raw: [u8; 24],
    pub reason: [char; 40],
    pub reason_raw: [u8; 40],
}

#[derive(Clone)]
pub struct OtherGuildInfo {
    pub raw: Vec<u8>,
    pub guildname: [char; 24],
    pub guildname_raw: [u8; 24],
    pub guild_level: i32,
    pub guild_level_raw: [u8; 4],
    pub guild_member_size: i32,
    pub guild_member_size_raw: [u8; 4],
    pub guild_ranking: i32,
    pub guild_ranking_raw: [u8; 4],
}

#[derive(Clone)]
pub struct MemberPositionIdNameInfo {
    pub raw: Vec<u8>,
    pub position_id: i32,
    pub position_id_raw: [u8; 4],
    pub pos_name: [char; 24],
    pub pos_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct GuildMemberInfo {
    pub raw: Vec<u8>,
    pub aid: i32,
    pub aid_raw: [u8; 4],
    pub gid: i32,
    pub gid_raw: [u8; 4],
    pub head: i16,
    pub head_raw: [u8; 2],
    pub head_palette: i16,
    pub head_palette_raw: [u8; 2],
    pub sex: i16,
    pub sex_raw: [u8; 2],
    pub job: i16,
    pub job_raw: [u8; 2],
    pub level: i16,
    pub level_raw: [u8; 2],
    pub contribution_exp: i32,
    pub contribution_exp_raw: [u8; 4],
    pub current_state: i32,
    pub current_state_raw: [u8; 4],
    pub position_id: i32,
    pub position_id_raw: [u8; 4],
    pub intro: [char; 50],
    pub intro_raw: [u8; 50],
    pub charname: [char; 24],
    pub charname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct RelatedGuildInfo {
    pub raw: Vec<u8>,
    pub relation: i32,
    pub relation_raw: [u8; 4],
    pub gdid: i32,
    pub gdid_raw: [u8; 4],
    pub guildname: [char; 24],
    pub guildname_raw: [u8; 24],
}

#[derive(Clone)]
pub struct MonsterInfoElement {
    pub raw: Vec<u8>,
    pub water: u8,
    pub water_raw: [u8; 1],
    pub earth: u8,
    pub earth_raw: [u8; 1],
    pub fire: u8,
    pub fire_raw: [u8; 1],
    pub wind: u8,
    pub wind_raw: [u8; 1],
    pub poison: u8,
    pub poison_raw: [u8; 1],
    pub saint: u8,
    pub saint_raw: [u8; 1],
    pub dark: u8,
    pub dark_raw: [u8; 1],
    pub mental: u8,
    pub mental_raw: [u8; 1],
    pub undead: u8,
    pub undead_raw: [u8; 1],
}

#[derive(Clone)]
pub struct MakableitemInfo {
    pub raw: Vec<u8>,
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub material_id: [u16; 3],
    pub material_id_raw: [u8; 6],
}

#[derive(Clone)]
pub struct PeteggitemInfo {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct ArrowitemInfo {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
}

#[derive(Clone)]
pub struct NormalitemExtrainfo2 {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub wear_state: u16,
    pub wear_state_raw: [u8; 2],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct RepairitemInfo {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
}

#[derive(Clone)]
pub struct FRIEND {
    pub raw: Vec<u8>,
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub name: [char; 24],
    pub name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct TagCharacterBlockInfo {
    pub raw: Vec<u8>,
    pub gid: u32,
    pub gid_raw: [u8; 4],
    pub sz_expire_date: [char; 20],
    pub sz_expire_date_raw: [u8; 20],
}

#[derive(Clone)]
pub struct PVPINFO {
    pub raw: Vec<u8>,
    pub win_point: i32,
    pub win_point_raw: [u8; 4],
    pub lose_point: i32,
    pub lose_point_raw: [u8; 4],
    pub point: i32,
    pub point_raw: [u8; 4],
}

#[derive(Clone)]
pub struct Filetime {
    pub raw: Vec<u8>,
    pub dw_low_date_time: u32,
    pub dw_low_date_time_raw: [u8; 4],
    pub dw_high_date_time: u32,
    pub dw_high_date_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct MailList {
    pub raw: Vec<u8>,
    pub mail_id: u32,
    pub mail_id_raw: [u8; 4],
    pub header: [char; 40],
    pub header_raw: [u8; 40],
    pub is_open: i8,
    pub is_open_raw: [u8; 1],
    pub from_name: [char; 24],
    pub from_name_raw: [u8; 24],
    pub delete_time: i32,
    pub delete_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct AuctionItemSearchInfo {
    pub raw: Vec<u8>,
    pub auction_id: u32,
    pub auction_id_raw: [u8; 4],
    pub seller_name: [char; 24],
    pub seller_name_raw: [u8; 24],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: i32,
    pub atype_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub now_price: i32,
    pub now_price_raw: [u8; 4],
    pub max_price: i32,
    pub max_price_raw: [u8; 4],
    pub buyer_name: [char; 24],
    pub buyer_name_raw: [u8; 24],
    pub delete_time: i32,
    pub delete_time_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketMobHunting {
    pub raw: Vec<u8>,
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
    pub mob_gid: u32,
    pub mob_gid_raw: [u8; 4],
    pub max_count: i16,
    pub max_count_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct EquipmentitemExtrainfo2 {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub wear_state: u16,
    pub wear_state_raw: [u8; 2],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub hire_expire_date: i32,
    pub hire_expire_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PggLingoKeyTemp {
    pub raw: Vec<u8>,
    pub dw_alg_num: u32,
    pub dw_alg_num_raw: [u8; 4],
    pub dw_alg_key1: u32,
    pub dw_alg_key1_raw: [u8; 4],
    pub dw_alg_key2: u32,
    pub dw_alg_key2_raw: [u8; 4],
    pub dw_seed: u32,
    pub dw_seed_raw: [u8; 4],
}

#[derive(Clone)]
pub struct PacketZcQuestInfo {
    pub raw: Vec<u8>,
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
    pub active: bool,
    pub active_raw: [u8; 1],
}

#[derive(Clone)]
pub struct PacketZcMissionHunt {
    pub raw: Vec<u8>,
    pub mob_gid: u32,
    pub mob_gid_raw: [u8; 4],
    pub hunt_count: i16,
    pub hunt_count_raw: [u8; 2],
    pub mob_name: [char; 24],
    pub mob_name_raw: [u8; 24],
}

#[derive(Clone)]
pub struct PacketZcQuestMissionInfo {
    pub raw: Vec<u8>,
    pub quest_id: u32,
    pub quest_id_raw: [u8; 4],
    pub quest_svr_time: i32,
    pub quest_svr_time_raw: [u8; 4],
    pub quest_end_time: i32,
    pub quest_end_time_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub hunt: Vec<PacketZcMissionHunt>,
    pub hunt_raw: Vec<Vec<u8>>,
}

#[derive(Clone)]
pub struct ShortCutKey {
    pub raw: Vec<u8>,
    pub is_skill: i8,
    pub is_skill_raw: [u8; 1],
    pub id: u32,
    pub id_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct EquipmentitemExtrainfo301 {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub location: u16,
    pub location_raw: [u8; 2],
    pub wear_state: u16,
    pub wear_state_raw: [u8; 2],
    pub is_damaged: bool,
    pub is_damaged_raw: [u8; 1],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub hire_expire_date: i32,
    pub hire_expire_date_raw: [u8; 4],
    pub bind_on_equip_type: u16,
    pub bind_on_equip_type_raw: [u8; 2],
    pub w_item_sprite_number: u16,
    pub w_item_sprite_number_raw: [u8; 2],
}

#[derive(Clone)]
pub struct NormalitemExtrainfo3 {
    pub raw: Vec<u8>,
    pub index: i16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub is_identified: bool,
    pub is_identified_raw: [u8; 1],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub wear_state: u16,
    pub wear_state_raw: [u8; 2],
    pub slot: EQUIPSLOTINFO,
    pub slot_raw: [u8; 8],
    pub hire_expire_date: i32,
    pub hire_expire_date_raw: [u8; 4],
}

#[derive(Clone)]
pub struct SkillPostdelay {
    pub raw: Vec<u8>,
    pub skid: u16,
    pub skid_raw: [u8; 2],
    pub delay_tm: u32,
    pub delay_tm_raw: [u8; 4],
}

#[derive(Clone)]
pub struct CharacterList {
    pub raw: Vec<u8>,
    pub dw_gid: u32,
    pub dw_gid_raw: [u8; 4],
    pub slot_idx: u8,
    pub slot_idx_raw: [u8; 1],
}

#[derive(Clone)]
pub struct BattleFieldInfo {
    pub raw: Vec<u8>,
    pub bfno: u32,
    pub bfno_raw: [u8; 4],
    pub battle_field_name: [char; 56],
    pub battle_field_name_raw: [u8; 56],
    pub join_team: i16,
    pub join_team_raw: [u8; 2],
}

#[derive(Clone)]
pub struct PartyBookingDetail {
    pub raw: Vec<u8>,
    pub level: i16,
    pub level_raw: [u8; 2],
    pub map_id: i16,
    pub map_id_raw: [u8; 2],
    pub job: [i16; 6],
    pub job_raw: [u8; 12],
}

#[derive(Clone)]
pub struct PartyBookingAdInfo {
    pub raw: Vec<u8>,
    pub index: u32,
    pub index_raw: [u8; 4],
    pub char_name: [char; 24],
    pub char_name_raw: [u8; 24],
    pub expire_time: i32,
    pub expire_time_raw: [u8; 4],
    pub detail: PartyBookingDetail,
    pub detail_raw: Vec<u8>,
}

#[derive(Clone)]
pub struct ProductinfoInBuyingStore {
    pub raw: Vec<u8>,
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub price: i32,
    pub price_raw: [u8; 4],
}

#[derive(Clone)]
pub struct BuyingStoreItemlist {
    pub raw: Vec<u8>,
    pub price: i32,
    pub price_raw: [u8; 4],
    pub count: i16,
    pub count_raw: [u8; 2],
    pub atype: u8,
    pub atype_raw: [u8; 1],
    pub itid: u16,
    pub itid_raw: [u8; 2],
}

#[derive(Clone)]
pub struct TradeItemBuyingStore {
    pub raw: Vec<u8>,
    pub index: u16,
    pub index_raw: [u8; 2],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub count: i16,
    pub count_raw: [u8; 2],
}

#[derive(Clone)]
pub struct ResultItemInfo {
    pub raw: Vec<u8>,
    pub ssiid: u32,
    pub ssiid_raw: [u8; 4],
    pub aid: u32,
    pub aid_raw: [u8; 4],
    pub store_name: [char; 80],
    pub store_name_raw: [u8; 80],
    pub itid: u16,
    pub itid_raw: [u8; 2],
    pub item_type: u8,
    pub item_type_raw: [u8; 1],
    pub price: i32,
    pub price_raw: [u8; 4],
    pub count: u16,
    pub count_raw: [u8; 2],
    pub refining_level: u8,
    pub refining_level_raw: [u8; 1],
    pub card1: u16,
    pub card1_raw: [u8; 2],
    pub card2: u16,
    pub card2_raw: [u8; 2],
    pub card3: u16,
    pub card3_raw: [u8; 2],
    pub card4: u16,
    pub card4_raw: [u8; 2],
}

#[derive(Debug)]
pub struct PacketUnknown {
    pub raw: Vec<u8>,
    pub packet_id: String,
}
impl Packet for PacketUnknown {
    fn id(&self, _packetver: u32) -> &str {
        self.packet_id.as_str()
    }
    fn name(&self) -> &str {
        "Unknown"
    }
    fn debug(&self) {
            println!("{:?}", self)
    }
    fn display(&self) {
            self.debug()
    }
    fn pretty_debug(&self) {
            self.debug()
    }
    fn raw(&self) -> &Vec<u8> {
            &self.raw
    }
    fn raw_mut(&mut self) -> &mut Vec<u8> {
            &mut self.raw
    }
    fn as_any(&self) -> &dyn Any{
        self
    }
    fn as_any_mut(&mut self) -> &mut dyn Any{
        self
    }
    fn base_len(&self, _packetver: u32) -> usize {
        0
    }
    fn to_json(&self, _packetver: u32) -> String {
        String::new()
    }
    fn fill_raw(&mut self) {
        
    }
    fn fill_raw_with_packetver(&mut self, _packetver: Option<u32>) {
        
    }
}
impl PacketUnknown {
    pub fn from(buffer: &[u8]) -> PacketUnknown {
        if buffer.len() >= 2 {
          PacketUnknown { raw: buffer.to_vec(), packet_id: format!("0x{:02X?}{:02X?}", buffer[0], buffer[1])}
        } else { 
          PacketUnknown { raw: buffer.to_vec(), packet_id: "0x??".to_string()}
        }
    }
    pub fn from_json(_entries: Vec<json_flat_parser::FlatJsonValue<&str>>, _packetver: u32) -> Result<Self, String> {
          Ok(PacketUnknown { raw: vec![], packet_id: "0x??".to_string()})
    }
}
